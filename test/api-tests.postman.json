{
	"info": {
		"_postman_id": "3de0c8fd-3fe5-4b58-9727-6f896c325c7e",
		"name": "ReportaONGD API",
		"description": "Collection for testing the ReportaONGD API\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"description": null,
			"item": [
				{
					"name": "Admin",
					"description": null,
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"admin@admin.com\", \"password\":\"admin\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login and Remember Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"tests['User has \"refresh_token\" property'] = user.hasOwnProperty('refresh_token');",
											"tests['User has \"empresa\" property'] = user.hasOwnProperty('empresa');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token', user.token);",
											"}",
											"if(tests['User has \"refresh_token\" property']){",
											"    postman.setEnvironmentVariable('refresh_token', user.refresh_token);",
											"}",
											"if(tests['User has \"empresa\" property']){",
											"    postman.setEnvironmentVariable('empresa_id', user.empresa);",
											"}",
											"",
											"tests['Environment variable \"token\" has been set'] = environment.token === user.token;",
											"tests['Environment variable \"empresa_id\" has been set'] = environment.empresa_id === user.empresa;",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"admin@admin.com\", \"password\":\"admin\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Token Refresh",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token', user.token);",
											"}",
											"",
											"tests['Environment variable \"token\" has been set'] = environment.token === user.token;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{refresh_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/refresh_token",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"refresh_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"postman.setEnvironmentVariable('user_id', user.id);",
											"    ",
											"}",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Block User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/block",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"block"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/unblock",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"unblock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{refresh_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/revoke_refresh_token",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"revoke_refresh_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listing Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d78dd37c-2be9-436f-8aa7-47dc4df7a1d5",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var users = responseJSON || [];",
											"",
											"tests['Number of users'] = users.length > 0;",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Current User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/user",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Current User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"tests['User has right email'] = \"admin2@admin.com\" === user.email;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"admin2@admin.com\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"tests['User has right email'] = \"john2@jacob.com\" === user.email;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "No Admin",
					"description": null,
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"johnnyjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login and Remember Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"tests['User has \"refresh_token\" property'] = user.hasOwnProperty('refresh_token');",
											"tests['User has \"empresa\" property'] = user.hasOwnProperty('empresa');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token_no_admin', user.token);",
											"}",
											"if(tests['User has \"refresh_token\" property']){",
											"    postman.setEnvironmentVariable('refresh_token_no_admin', user.refresh_token);",
											"}",
											"if(tests['User has \"empresa\" property']){",
											"    postman.setEnvironmentVariable('empresa_id', user.empresa);",
											"}",
											"",
											"tests['Environment variable \"token\" has been set'] = environment.token_no_admin === user.token;",
											"tests['Environment variable \"refresh_token\" has been set'] = environment.refresh_token_no_admin === user.refresh_token;",
											"tests['Environment variable \"empresa_id\" has been set'] = environment.empresa_id === user.empresa;",
											"",
											"",
											"pm.globals.unset(\"variable_key\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"johnnyjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Token Refresh",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token_no_admin', user.token);",
											"}",
											"",
											"tests['Environment variable \"token_no_admin\" has been set'] = environment.token_no_admin === user.token;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{refresh_token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/refresh_token",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"refresh_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Block User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/block",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"block"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/unblock",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"unblock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{refresh_token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/revoke_refresh_token",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"revoke_refresh_token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{refresh_token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listing Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Current User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/user",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Current User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"tests['User has right email'] = \"john2@jacob.com\" === user.email;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token_no_admin}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Blocked User",
					"description": null,
					"item": [
						{
							"name": "Login Fail 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"errors\" property'] = responseJSON.hasOwnProperty('errors');",
											"",
											"var errors = responseJSON.errors || {};",
											"",
											"tests['Response contains \"email or password\"'] = errors.hasOwnProperty('email or password');",
											"",
											"",
											"",
											"tests['Errors[\"email or password\"] contains \"is invalid\"'] = errors['email or password'].has(\"is invalid\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"xxx\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Fail 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"errors\" property'] = responseJSON.hasOwnProperty('errors');",
											"",
											"var errors = responseJSON.errors || {};",
											"",
											"tests['Response contains \"email or password\"'] = errors.hasOwnProperty('email or password');",
											"",
											"",
											"",
											"tests['Errors[\"email or password\"] contains \"is invalid\"'] = errors['email or password'].has(\"is invalid\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"xxx\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Fail 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"errors\" property'] = responseJSON.hasOwnProperty('errors');",
											"",
											"var errors = responseJSON.errors || {};",
											"",
											"tests['Response contains \"email or password\"'] = errors.hasOwnProperty('email or password');",
											"",
											"",
											"",
											"tests['Errors[\"email or password\"] contains \"is invalid\"'] = errors['email or password'].has(\"is invalid\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"xxx\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"errors\" property'] = responseJSON.hasOwnProperty('errors');",
											"",
											"var errors = responseJSON.errors || {};",
											"",
											"tests['Response contains \"email or password\"'] = errors.hasOwnProperty('user');",
											"",
											"",
											"",
											"tests['Errors[\"user\"] contains \"is invalid\"'] = errors['user'].has(\"is blocked\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"john2@jacob.com\", \"password\":\"johnnyjacob\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/users/{{user_id}}/unblock",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"unblock"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Categoria",
			"description": null,
			"item": [
				{
					"name": "Create Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4bc6e43-a9cc-42be-8965-d2b5d8f25a7f",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var categoria = responseJSON || {};",
									"",
									"tests['Categoria has \"_id\" property'] = categoria.hasOwnProperty('_id');",
									"tests['Categoria has \"valor\" property'] = categoria.hasOwnProperty('valor');",
									"",
									"if(tests['Categoria has \"_id\" property']){",
									"    postman.setEnvironmentVariable('categoria_id', categoria._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Ingeniero Técnico\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/categoria",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "202f2e2e-578f-4ead-aab4-09ae73c1e1b2",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var categoria = responseJSON || {};",
									"    ",
									"    tests['Categoria has \"valor\" property'] = categoria.hasOwnProperty('valor');",
									"    tests['Categoria has \"id\" property'] = categoria.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Técnico Profesional\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/categoria/{{categoria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria",
								"{{categoria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "066e04e6-3906-4733-acf3-9a417b5c33ec",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var categoria = responseJSON[0];",
									"",
									"        tests['Categoria has \"valor\" property'] = categoria.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains categorias'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/categoria",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69de6c6c-b695-47dc-a867-402fb03979e1",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var categoria = responseJSON || {};",
									"",
									"tests['Categoria has \"_id\" property'] = categoria.hasOwnProperty('_id');",
									"tests['Categoria has \"valor\" property'] = categoria.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/categoria/{{categoria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria",
								"{{categoria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Categoria No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3428690-c57e-405b-a93a-d785dcf1ca44",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Ingeniero Técnico\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/categoria",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Categoria No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e8602f7-5e47-4fba-8b17-f76167261d7a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Técnico Profesional\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/categoria/{{categoria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria",
								"{{categoria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categorias No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a1cdcc7-bcbc-4a0f-8545-8bd6c405cc7f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/categoria/{{categoria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria",
								"{{categoria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Categorias No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bb98a1d-9858-4bc8-aca4-b3022f02e64e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/categoria",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cofinanciador",
			"description": null,
			"item": [
				{
					"name": "Create Cofinanciador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99e9fe56-505a-477d-a061-be6157a1f440",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var cofinanciador = responseJSON || {};",
									"",
									"tests['Cofinanciador has \"_id\" property'] = cofinanciador.hasOwnProperty('_id');",
									"tests['Cofinanciador has \"valor\" property'] = cofinanciador.hasOwnProperty('valor');",
									"",
									"if(tests['Cofinanciador has \"_id\" property']){",
									"    postman.setEnvironmentVariable('cofinanciador_id', cofinanciador._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"AECID\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cofinanciador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "327c3928-ad2f-488c-95f2-bc14bf5e59de",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var cofinanciador = responseJSON || {};",
									"    ",
									"    tests['Cofinanciador has \"valor\" property'] = cofinanciador.hasOwnProperty('valor');",
									"    tests['Cofinanciador has \"id\" property'] = cofinanciador.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Otros\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador/{{cofinanciador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador",
								"{{cofinanciador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Cofinanciadores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "046a27a6-e4c0-4636-a6fc-eaa3306bc7a8",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var cofinanciador = responseJSON[0];",
									"",
									"        tests['Cofinanciador has \"valor\" property'] = cofinanciador.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains cofinanciadores'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cofinanciador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff5dd5db-7561-41b2-9b15-9cafaa28b5d8",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var cofinanciador = responseJSON || {};",
									"",
									"tests['Cofinanciador has \"_id\" property'] = cofinanciador.hasOwnProperty('_id');",
									"tests['Cofinanciador has \"valor\" property'] = cofinanciador.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador/{{cofinanciador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador",
								"{{cofinanciador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Cofinanciador No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64e33e3b-45d1-4c14-aef7-4acb6abd44b5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"AECID\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cofinanciador No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47c9cf53-0697-42ce-aba7-3f1ab1fad1d5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Otros\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador/{{cofinanciador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador",
								"{{cofinanciador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Cofinanciadores No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1de015b3-f815-4371-a003-ee6796757766",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cofinanciador No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "420ddb47-2e9a-4356-9d74-42bcf48057e2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador/{{cofinanciador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador",
								"{{cofinanciador_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contrato",
			"description": null,
			"item": [
				{
					"name": "Create Contrato",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "201693ab-a1aa-4f49-83a2-d4641a480c4d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var contrato = responseJSON || {};",
									"",
									"tests['Contrato has \"_id\" property'] = contrato.hasOwnProperty('_id');",
									"tests['Contrato has \"valor\" property'] = contrato.hasOwnProperty('valor');",
									"",
									"if(tests['Contrato has \"_id\" property']){",
									"    postman.setEnvironmentVariable('contrato_id', contrato._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Indefinido\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/contrato",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contrato",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7351f2f-258c-45ea-a34f-f02bc01875a5",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var contrato = responseJSON || {};",
									"    ",
									"    tests['Contrato has \"valor\" property'] = contrato.hasOwnProperty('valor');",
									"    tests['Contrato has \"id\" property'] = contrato.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Obra y Servicio\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/contrato/{{contrato_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato",
								"{{contrato_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Contratos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "940ba1aa-fa88-4516-93ec-66c329bcd66e",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var contratos = responseJSON[0];",
									"",
									"        tests['Contrato has \"valor\" property'] = contratos.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains contratos'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/contrato",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contrato",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b093684-d526-45a9-9d8f-62a4400c5724",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"",
									"",
									"var contrato = responseJSON || {};",
									"",
									"tests['Contrato has \"_id\" property'] = contrato.hasOwnProperty('_id');",
									"tests['Contrato has \"valor\" property'] = contrato.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/contrato/{{contrato_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato",
								"{{contrato_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contrato No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2702cda4-148f-4faf-a95d-4beb7c1dcc11",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Indefinido\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/contrato",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contrato No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f962daa9-7258-47d4-8636-417bac920ce8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Obra y Servicio\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/contrato/{{contrato_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato",
								"{{contrato_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Contratos No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df587f7a-4c12-4412-b05e-605169094667",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/contrato",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contrato No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "374da72e-c320-4281-8c45-b75183ad9f6b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/contrato/{{contrato_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato",
								"{{contrato_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Costes",
			"description": null,
			"item": [
				{
					"name": "Create Costes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09159c0e-234f-4406-a79c-c564681e193d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var costes = responseJSON || {};",
									"",
									"tests['Costes has \"_id\" property'] = costes.hasOwnProperty('_id');",
									"tests['Costes has \"valor\" property'] = costes.hasOwnProperty('valor');",
									"",
									"if(tests['Costes has \"_id\" property']){",
									"    postman.setEnvironmentVariable('costes_id', costes._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"coste 1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/costes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Costes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "867951a5-9795-489d-a61f-203ad89f1d1c",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"  var costes = responseJSON || {};",
									"",
									"tests['Costes has \"_id\" property'] = costes.hasOwnProperty('_id');",
									"tests['Costes has \"valor\" property'] = costes.hasOwnProperty('valor');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Obra y Servicio\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/costes/{{costes_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes",
								"{{costes_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Costes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cce83c75-90e0-4123-933f-e3ad38a27c4e",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"       var costes = responseJSON[0] || [];",
									"",
									"tests['Costes has \"_id\" property'] = costes.hasOwnProperty('_id');",
									"tests['Costes has \"valor\" property'] = costes.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains costes'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/costes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Costes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4c9d5b8-a0e0-4445-b5ac-ad8f8bf5983e",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"",
									"",
									"var costes = responseJSON || {};",
									"",
									"tests['Costes has \"_id\" property'] = costes.hasOwnProperty('_id');",
									"tests['Costes has \"valor\" property'] = costes.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/costes/{{costes_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes",
								"{{costes_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Costes No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2702cda4-148f-4faf-a95d-4beb7c1dcc11",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Indefinido\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/costes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Costes No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f962daa9-7258-47d4-8636-417bac920ce8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Obra y Servicio\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/costes/{{costes_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes",
								"{{costes_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Costes No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df587f7a-4c12-4412-b05e-605169094667",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/costes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Costes No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "374da72e-c320-4281-8c45-b75183ad9f6b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/costes/{{costes_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"costes",
								"{{costes_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EstadosInforme",
			"description": null,
			"item": [
				{
					"name": "Create EstadosInforme",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2ee34bb-cbfa-4c6c-879f-172fbd0cbe4e",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var estados_informe = responseJSON || {};",
									"",
									"tests['EstadosInforme has \"_id\" property'] = estados_informe.hasOwnProperty('_id');",
									"tests['EstadosInforme has \"nombre\" property'] = estados_informe.hasOwnProperty('nombre');",
									"tests['EstadosInforme has \"final\" property'] = estados_informe.hasOwnProperty('final');",
									"tests['EstadosInforme has \"estado_siguiente\" property'] = estados_informe.hasOwnProperty('estado_siguiente');",
									"if(tests['EstadosInforme has \"_id\" property']){",
									"    postman.setEnvironmentVariable('estados_informe_id', estados_informe._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"EstadosInforme 1\", \"estado_siguiente\": null, \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update EstadosInforme",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c856141a-556f-4699-bbae-d79d4f10889b",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var estados_informe = responseJSON || {};",
									"    ",
									"    tests['EstadosInforme has \"_id\" property'] = estados_informe.hasOwnProperty('_id');",
									"    tests['EstadosInforme has \"nombre\" property'] = estados_informe.hasOwnProperty('nombre');",
									"    tests['EstadosInforme has \"final\" property'] = estados_informe.hasOwnProperty('final');",
									"    tests['EstadosInforme has \"estado_siguiente\" property'] = estados_informe.hasOwnProperty('estado_siguiente');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Estado Final\", \"estado_siguiente\": \"null\", \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe/{{estados_informe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe",
								"{{estados_informe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All EstadosInformes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01791432-f567-419c-8a83-2816cd0a59be",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var estados_informe = responseJSON[0];",
									"",
									"        tests['EstadosInforme has \"_id\" property'] = estados_informe.hasOwnProperty('_id');",
									"        tests['EstadosInforme has \"nombre\" property'] = estados_informe.hasOwnProperty('nombre');",
									"        tests['EstadosInforme has \"final\" property'] = estados_informe.hasOwnProperty('final');",
									"       ",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains estados_informes'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EstadosInforme",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52213b0d-e0ee-4123-9618-63b037b1f782",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var estados_informe = responseJSON || {};",
									"",
									"tests['EstadosInforme has \"_id\" property'] = estados_informe.hasOwnProperty('_id');",
									"tests['EstadosInforme has \"nombre\" property'] = estados_informe.hasOwnProperty('nombre');",
									"tests['EstadosInforme has \"final\" property'] = estados_informe.hasOwnProperty('final');",
									"tests['EstadosInforme has \"estado_siguiente\" property'] = estados_informe.hasOwnProperty('estado_siguiente');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe/{{estados_informe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe",
								"{{estados_informe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create EstadosInforme No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "874b2eb6-09fb-4faa-a6ea-7c5fa45ea55e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"EstadosInforme 1\", \"estado_siguiente\": null, \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update EstadosInforme No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0289b0b2-e631-4dad-bce4-d012ea1bf8ac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Estado Final\", \"estado_siguiente\": \"null\", \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe/{{estados_informe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe",
								"{{estados_informe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All EstadosInformes No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4e3b7c7-2471-419a-9730-d60f55979ae1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EstadosInforme No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c8aa6ad-646a-4685-a3e0-5f352344a7f4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe/{{estados_informe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe",
								"{{estados_informe_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EstadosProyecto",
			"description": null,
			"item": [
				{
					"name": "Create EstadosProyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69d9f332-6ac0-4f68-b344-7cecfebb2440",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var estados_proyecto = responseJSON || {};",
									"",
									"tests['EstadosProyecto has \"_id\" property'] = estados_proyecto.hasOwnProperty('_id');",
									"tests['EstadosProyecto has \"nombre\" property'] = estados_proyecto.hasOwnProperty('nombre');",
									"tests['EstadosProyecto has \"final\" property'] = estados_proyecto.hasOwnProperty('final');",
									"",
									"if(tests['EstadosProyecto has \"_id\" property']){",
									"    postman.setEnvironmentVariable('estados_proyecto_id', estados_proyecto._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"EstadosProyecto 1\",  \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update EstadosProyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78ca8985-1ca0-4749-854f-54472ab0d24d",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var estados_proyecto = responseJSON || {};",
									"    ",
									"    tests['EstadosProyecto has \"_id\" property'] = estados_proyecto.hasOwnProperty('_id');",
									"    tests['EstadosProyecto has \"nombre\" property'] = estados_proyecto.hasOwnProperty('nombre');",
									"    tests['EstadosProyecto has \"final\" property'] = estados_proyecto.hasOwnProperty('final');",
									"    ",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Estado Final\",  \"final\": true, \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto/{{estados_proyecto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto",
								"{{estados_proyecto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All EstadosProyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7940c92-e1b6-4b4e-8e59-fa0daa9c42de",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var estados_proyecto = responseJSON[0];",
									"",
									"        tests['EstadosProyecto has \"_id\" property'] = estados_proyecto.hasOwnProperty('_id');",
									"        tests['EstadosProyecto has \"nombre\" property'] = estados_proyecto.hasOwnProperty('nombre');",
									"        tests['EstadosProyecto has \"final\" property'] = estados_proyecto.hasOwnProperty('final');",
									"        ",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains estados_proyectos'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EstadosProyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17e373c9-cef0-4669-ba95-6e8bfd5fa21c",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var estados_proyecto = responseJSON || {};",
									"",
									"tests['EstadosProyecto has \"_id\" property'] = estados_proyecto.hasOwnProperty('_id');",
									"tests['EstadosProyecto has \"nombre\" property'] = estados_proyecto.hasOwnProperty('nombre');",
									"tests['EstadosProyecto has \"final\" property'] = estados_proyecto.hasOwnProperty('final');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto/{{estados_proyecto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto",
								"{{estados_proyecto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create EstadosProyecto No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "874b2eb6-09fb-4faa-a6ea-7c5fa45ea55e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"EstadosInforme 1\", \"estado_siguiente\": null, \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update EstadosProyecto No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0289b0b2-e631-4dad-bce4-d012ea1bf8ac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Estado Final\", \"estado_siguiente\": \"null\", \"final\": true}"
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto/{{estados_proyecto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto",
								"{{estados_proyecto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All EstadosProyecto No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4e3b7c7-2471-419a-9730-d60f55979ae1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get EstadosProyecto No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c8aa6ad-646a-4685-a3e0-5f352344a7f4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_proyecto/{{estados_proyecto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_proyecto",
								"{{estados_proyecto_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Localizacion",
			"description": null,
			"item": [
				{
					"name": "Create Localizacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63ab8b81-75df-435a-a112-c220ff68c1d8",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var localizacion = responseJSON || {};",
									"",
									"tests['Localizacion has \"_id\" property'] = localizacion.hasOwnProperty('_id');",
									"tests['Localizacion has \"valor\" property'] = localizacion.hasOwnProperty('valor');",
									"",
									"if(tests['Localizacion has \"_id\" property']){",
									"    postman.setEnvironmentVariable('localizacion_id', localizacion._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Nacional\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Localizacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43e27efa-58ba-4f00-b5cb-56a6b2d92db3",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var localizacion = responseJSON || {};",
									"    ",
									"    tests['Localizacion has \"valor\" property'] = localizacion.hasOwnProperty('valor');",
									"    tests['Localizacion has \"id\" property'] = localizacion.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Exterior\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion/{{localizacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion",
								"{{localizacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Localizaciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f68c904-1b29-486f-bfed-48a7fe6fd331",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var localizacion = responseJSON[0];",
									"        tests['Localizacion has \"valor\" property'] = localizacion.hasOwnProperty('valor');",
									"      ",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains localizaciones'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Localizacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6578f529-ee68-4b04-aa75-d1804466555e",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var localizacion = responseJSON || {};",
									"",
									"tests['Localizacion has \"_id\" property'] = localizacion.hasOwnProperty('_id');",
									"tests['Localizacion has \"valor\" property'] = localizacion.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion/{{localizacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion",
								"{{localizacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Localizacion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53194060-71d2-45e5-b73f-6d3671c8f757",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Nacional\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Localizacion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61614afd-9da6-499b-9d2e-2584abfc0178",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Exterior\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion/{{localizacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion",
								"{{localizacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Localizaciones No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c6b568b-f3e9-48bd-a2bc-560c09ac93f9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Localizacion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d0cfbb1-7859-408a-a5ae-29f2b6aef47f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion/{{localizacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion",
								"{{localizacion_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Moneda",
			"description": null,
			"item": [
				{
					"name": "Create Moneda",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b913297c-725a-4299-b7b0-ace23cea06dc",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var moneda = responseJSON || {};",
									"",
									"tests['Moneda has \"_id\" property'] = moneda.hasOwnProperty('_id');",
									"tests['Moneda has \"descripcion\" property'] = moneda.hasOwnProperty('descripcion');",
									"tests['Moneda has \"codigo\" property'] = moneda.hasOwnProperty('codigo');",
									"",
									"if(tests['Moneda has \"_id\" property']){",
									"    postman.setEnvironmentVariable('moneda_id', moneda._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"descripcion\":\"Dolar Americano\", \"codigo\": \"USD\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/moneda",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Moneda",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4b085e1-97b0-4fdc-92b8-8e4ac48cad0f",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var moneda = responseJSON || {};",
									"    ",
									"    tests['Moneda has \"_id\" property'] = moneda.hasOwnProperty('_id');",
									"    tests['Moneda has \"descripcion\" property'] = moneda.hasOwnProperty('descripcion');",
									"    tests['Moneda has \"codigo\" property'] = moneda.hasOwnProperty('codigo');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"descripcion\":\"Euro\", \"codigo\": \"EUR\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/moneda/{{moneda_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda",
								"{{moneda_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Monedas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5668af39-43f0-47f1-9e54-9831c7f3d460",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var moneda = responseJSON[0];",
									"",
									"        tests['Moneda has \"descripcion\" property'] = moneda.hasOwnProperty('descripcion');",
									"        tests['Moneda has \"codigo\" property'] = moneda.hasOwnProperty('codigo');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains monedas'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/moneda",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Moneda",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0386ac9c-77bc-446f-ab91-1f2eac287501",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var moneda = responseJSON || {};",
									"",
									"tests['Moneda has \"_id\" property'] = moneda.hasOwnProperty('_id');",
									"tests['Moneda has \"descripcion\" property'] = moneda.hasOwnProperty('descripcion');",
									"tests['Moneda has \"codigo\" property'] = moneda.hasOwnProperty('codigo');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/moneda/{{moneda_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda",
								"{{moneda_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Moneda No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df247ca9-add2-4d3f-a3e8-8210e04ca573",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"descripcion\":\"Dolar Americano\", \"codigo\": \"USD\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/moneda",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Moneda No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a313a521-95b0-4d11-9a8a-490ae517d7f6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"descripcion\":\"Euro\", \"codigo\": \"EUR\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/moneda/{{moneda_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda",
								"{{moneda_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Monedas No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9d09cfe-a73f-48f9-9e7b-33caf5a2d88d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/moneda",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Moneda No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "938a9a69-38c3-4828-af23-a72fb561dfb1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/moneda/{{moneda_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda",
								"{{moneda_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pais",
			"description": null,
			"item": [
				{
					"name": "Create Pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cc8ff38-188b-4809-8197-bc8fb6945f4a",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var pais = responseJSON || {};",
									"",
									"tests['Pais has \"_id\" property'] = pais.hasOwnProperty('_id');",
									"tests['Pais has \"valor\" property'] = pais.hasOwnProperty('valor');",
									"",
									"if(tests['Pais has \"_id\" property']){",
									"    postman.setEnvironmentVariable('pais_id', pais._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"España\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/pais",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8976fa60-8e65-4383-a65a-50be2069b523",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var pais = responseJSON || {};",
									"    ",
									"    tests['Pais has \"valor\" property'] = pais.hasOwnProperty('valor');",
									"    tests['Pais has \"id\" property'] = pais.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Francia\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/pais/{{pais_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais",
								"{{pais_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Paises",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "473eaded-ba84-49a6-8f30-a9c07447440c",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var pais = responseJSON[0];",
									"",
									"        tests['Pais has \"valor\" property'] = pais.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains paises'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/pais",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a735506-5bd7-44e1-a784-579a9951adb6",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var pais = responseJSON || {};",
									"",
									"tests['Pais has \"_id\" property'] = pais.hasOwnProperty('_id');",
									"tests['Pais has \"valor\" property'] = pais.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/pais/{{pais_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais",
								"{{pais_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pais No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2d800da-5e3d-49fe-b7a7-7c5d8cb27141",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"España\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/pais",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pais No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae6d1101-2c6e-47f4-80a4-221f5ef15406",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Francia\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/pais/{{pais_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais",
								"{{pais_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Paises No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81e0b1e0-0cd5-4ce7-b9d9-ff903bc92ae3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/pais",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pais No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cba57205-4227-44d7-bb25-4aaa0f826aac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/pais/{{pais_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais",
								"{{pais_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoActividad",
			"description": null,
			"item": [
				{
					"name": "Create TipoActividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c53cd5b-1d69-4fcd-8768-2bdca8b937d6",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_actividad = responseJSON || {};",
									"",
									"tests['TipoActividad has \"_id\" property'] = tipo_actividad.hasOwnProperty('_id');",
									"tests['TipoActividad has \"valor\" property'] = tipo_actividad.hasOwnProperty('valor');",
									"",
									"if(tests['TipoActividad has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_actividad_id', tipo_actividad._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoActividad 1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoActividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76e15485-2c4d-4d91-8cb2-e83ebb5124bd",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var tipo_actividad = responseJSON || {};",
									"    ",
									"    tests['TipoActividad has \"valor\" property'] = tipo_actividad.hasOwnProperty('valor');",
									"    tests['TipoActividad has \"id\" property'] = tipo_actividad.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoActividad 2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad/{{tipo_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad",
								"{{tipo_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoActividades",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb7bd0da-6bb1-40ae-83ea-c0780ad22ff9",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var tipo_actividad = responseJSON[0];",
									"",
									"        tests['TipoActividad has \"valor\" property'] = tipo_actividad.hasOwnProperty('valor');",
									"",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipo_actividades'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoActividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb7faf64-ed5c-440b-bf9e-6f530de9ba31",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_actividad = responseJSON || {};",
									"",
									"tests['TipoActividad has \"_id\" property'] = tipo_actividad.hasOwnProperty('_id');",
									"tests['TipoActividad has \"valor\" property'] = tipo_actividad.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad/{{tipo_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad",
								"{{tipo_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoActividad No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfaf60c9-82c0-4845-8409-753cebd2bb7f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoActividad 1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoActividad No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90e803f2-d290-46b4-8d64-e076fd7af1d0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoActividad 2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad/{{tipo_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad",
								"{{tipo_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoActividades No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f4f8d62-9b53-4750-ae1e-a4b7216699be",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoActividad No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c284d1f-ff58-4593-8869-e91888476913",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad/{{tipo_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad",
								"{{tipo_actividad_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoMovimiento",
			"description": null,
			"item": [
				{
					"name": "Create TipoMovimiento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8e041ec-444a-4e86-bd07-1e39eeda33b4",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_movimiento = responseJSON || {};",
									"",
									"tests['TipoMovimiento has \"_id\" property'] = tipo_movimiento.hasOwnProperty('_id');",
									"tests['TipoMovimiento has \"valor\" property'] = tipo_movimiento.hasOwnProperty('valor');",
									"",
									"if(tests['TipoMovimiento has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_movimiento_id', tipo_movimiento._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Pago\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoMovimiento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9dac5d01-ab01-4b5f-bc12-3c54b0b0093f",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var tipo_movimiento = responseJSON || {};",
									"    ",
									"    tests['TipoMovimiento has \"valor\" property'] = tipo_movimiento.hasOwnProperty('valor');",
									"    tests['TipoMovimiento has \"id\" property'] = tipo_movimiento.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Transferencia\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento/{{tipo_movimiento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento",
								"{{tipo_movimiento_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoMovimientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96ed7572-17ac-4d83-92f3-db231aa81cfe",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var tipo_movimiento = responseJSON[0];",
									"",
									"        tests['TipoMovimiento has \"valor\" property'] = tipo_movimiento.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipo_movimientoes'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoMovimiento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "049abac2-b7e0-401f-9ec9-30be97bb5045",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_movimiento = responseJSON || {};",
									"",
									"tests['TipoMovimiento has \"_id\" property'] = tipo_movimiento.hasOwnProperty('_id');",
									"tests['TipoMovimiento has \"valor\" property'] = tipo_movimiento.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento/{{tipo_movimiento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento",
								"{{tipo_movimiento_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoMovimiento No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0eaa53a6-c3ae-456c-90d6-878664bf712a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Pago\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoMovimiento No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4acbe464-d344-4b18-8e99-20472cf59e65",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Transferencia\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento/{{tipo_movimiento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento",
								"{{tipo_movimiento_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoMovimientos No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b79b392-adb6-4d84-808d-8f621a7f7eba",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoMovimiento No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72f5ce99-c9ab-4c2d-aa33-fcb9ccbbd190",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento/{{tipo_movimiento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento",
								"{{tipo_movimiento_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoPartida",
			"description": null,
			"item": [
				{
					"name": "Create TipoPartida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9539bcfa-faa6-4136-b5b4-01cc1376b904",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_partida = responseJSON || {};",
									"",
									"tests['TipoPartida has \"_id\" property'] = tipo_partida.hasOwnProperty('_id');",
									"tests['TipoPartida has \"nombre\" property'] = tipo_partida.hasOwnProperty('nombre');",
									"tests['TipoPartida has \"codigo\" property'] = tipo_partida.hasOwnProperty('codigo');",
									"if(tests['TipoPartida has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_partida_id', tipo_partida._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"TipoPartida 1\", \"codigo\": \"TP1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPartida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e14f2de-7a50-47ac-a442-bb28d2b4a8cc",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var tipo_partida = responseJSON || {};",
									"    ",
									"    tests['TipoPartida has \"_id\" property'] = tipo_partida.hasOwnProperty('_id');",
									"    tests['TipoPartida has \"nombre\" property'] = tipo_partida.hasOwnProperty('nombre');",
									"    tests['TipoPartida has \"codigo\" property'] = tipo_partida.hasOwnProperty('codigo');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"TipoPartida 2\", \"codigo\": \"TP2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida/{{tipo_partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida",
								"{{tipo_partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPartidas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ad6d41a-fb99-436f-958d-9a724bac3eb8",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var tipo_partida = responseJSON[0];",
									"",
									"       tests['TipoPartida has \"_id\" property'] = tipo_partida.hasOwnProperty('_id');",
									"       tests['TipoPartida has \"nombre\" property'] = tipo_partida.hasOwnProperty('nombre');",
									"       tests['TipoPartida has \"codigo\" property'] = tipo_partida.hasOwnProperty('codigo');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipos_partida'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPartida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ad446fa-e0c9-439f-ba5f-053d67fe0bfa",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_partida = responseJSON || {};",
									"",
									"tests['TipoPartida has \"_id\" property'] = tipo_partida.hasOwnProperty('_id');",
									"tests['TipoPartida has \"nombre\" property'] = tipo_partida.hasOwnProperty('nombre');",
									"tests['TipoPartida has \"codigo\" property'] = tipo_partida.hasOwnProperty('codigo');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida/{{tipo_partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida",
								"{{tipo_partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoPartida No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56079770-26ab-47b2-ae2d-99309c043f4c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"TipoPartida 1\", \"codigo\": \"TP1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPartida No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c48849e2-7246-4d6b-a9ca-259379e17715",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"TipoPartida 2\", \"codigo\": \"TP2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida/{{tipo_partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida",
								"{{tipo_partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPartidas No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04323de0-1c2f-4d94-9fe4-5f134d4b1da4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPartida No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b3e2aa3-ab63-413c-9965-5ebea25eed96",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida/{{tipo_partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida",
								"{{tipo_partida_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoPersonal",
			"description": null,
			"item": [
				{
					"name": "Create TipoPersonal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccd55bc7-7d44-4963-9d7b-726851ed0cfe",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_personal = responseJSON || {};",
									"",
									"tests['TipoPersonal has \"_id\" property'] = tipo_personal.hasOwnProperty('_id');",
									"tests['TipoPersonal has \"valor\" property'] = tipo_personal.hasOwnProperty('valor');",
									"",
									"if(tests['TipoPersonal has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_personal_id', tipo_personal._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"codigo\": \"PL\", \"valor\":\"Personal Local\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPersonal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2573c299-06e9-4050-9e28-e4c3539fc2c3",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									" ",
									"    var tipo_personal = responseJSON || {};",
									"    ",
									"    tests['TipoPersonal has \"valor\" property'] = tipo_personal.hasOwnProperty('valor');",
									"    tests['TipoPersonal has \"id\" property'] = tipo_personal.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"codigo\": \"PS\", \"valor\":\"Personal en Sede\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal/{{tipo_personal_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal",
								"{{tipo_personal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPersonales",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8513704f-b20b-4114-be5f-e087a6652583",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var tipo_personal = responseJSON[0];",
									"",
									"        tests['TipoPersonal has \"valor\" property'] = tipo_personal.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipo_personales'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPersonal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbac4e4b-cecc-4278-a443-47340e95c7e9",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_personal = responseJSON || {};",
									"",
									"tests['TipoPersonal has \"_id\" property'] = tipo_personal.hasOwnProperty('_id');",
									"tests['TipoPersonal has \"valor\" property'] = tipo_personal.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal/{{tipo_personal_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal",
								"{{tipo_personal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoPersonal No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a00507f-9f7d-4297-9b11-bc76bd89b293",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Personal Local\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPersonal No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0114f9ed-ed9a-4002-8535-025d144aad9c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"Personal en Sede\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal/{{tipo_personal_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal",
								"{{tipo_personal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPersonales No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2fc9696-329f-4c3f-8874-31797c5c62bf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPersonal No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f0d92e7-f1e5-4b25-a4b3-b95ab41a4948",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal/{{tipo_personal_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal",
								"{{tipo_personal_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoPeriodo",
			"description": null,
			"item": [
				{
					"name": "Create TipoPeriodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "790fd318-08d6-4a25-896f-5de0e59aab79",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_periodo = responseJSON || {};",
									"",
									"tests['TipoPeriodo has \"_id\" property'] = tipo_periodo.hasOwnProperty('_id');",
									"tests['TipoPeriodo has \"nombre\" property'] = tipo_periodo.hasOwnProperty('nombre');",
									"tests['TipoPeriodo has \"codigo\" property'] = tipo_periodo.hasOwnProperty('codigo');",
									"if(tests['TipoPeriodo has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_periodo_id', tipo_periodo._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Periodo 1\", \"codigo\": \"per-1\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPeriodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6390a2e3-5000-44ab-9eaf-2bebd38a833b",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									" ",
									"    var tipo_periodo = responseJSON || {};",
									"    ",
									"   tests['TipoPeriodo has \"_id\" property'] = tipo_periodo.hasOwnProperty('_id');",
									"tests['TipoPeriodo has \"nombre\" property'] = tipo_periodo.hasOwnProperty('nombre');",
									"tests['TipoPeriodo has \"codigo\" property'] = tipo_periodo.hasOwnProperty('codigo');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Periodo 2\", \"codigo\": \"per-2\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo/{{tipo_periodo_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo",
								"{{tipo_periodo_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPeriodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90e14baf-76b3-438b-ba90-ef750205e790",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"         var tipo_periodo = responseJSON[0] || [];",
									"    ",
									"   tests['TipoPeriodo has \"_id\" property'] = tipo_periodo.hasOwnProperty('_id');",
									"tests['TipoPeriodo has \"nombre\" property'] = tipo_periodo.hasOwnProperty('nombre');",
									"tests['TipoPeriodo has \"codigo\" property'] = tipo_periodo.hasOwnProperty('codigo');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipo_periodo'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPeriodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9cba10e-9978-4027-baa2-44ffa1ffca4e",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									" var tipo_periodo = responseJSON || {};",
									"    ",
									"   tests['TipoPeriodo has \"_id\" property'] = tipo_periodo.hasOwnProperty('_id');",
									"tests['TipoPeriodo has \"nombre\" property'] = tipo_periodo.hasOwnProperty('nombre');",
									"tests['TipoPeriodo has \"codigo\" property'] = tipo_periodo.hasOwnProperty('codigo');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo/{{tipo_periodo_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo",
								"{{tipo_periodo_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoPeriodo No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a00507f-9f7d-4297-9b11-bc76bd89b293",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Periodo 1\", \"codigo\": \"per-1\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoPeriodo No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0114f9ed-ed9a-4002-8535-025d144aad9c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"nombre\":\"Periodo 1\", \"codigo\": \"per-1\", \"empresa\": \"{{empresa_id}}\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo/{{tipo_periodo_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo",
								"{{tipo_periodo_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoPeriodo No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2fc9696-329f-4c3f-8874-31797c5c62bf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoPeriodo No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f0d92e7-f1e5-4b25-a4b3-b95ab41a4948",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_periodo/{{tipo_periodo_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_periodo",
								"{{tipo_periodo_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TipoValoracion",
			"description": null,
			"item": [
				{
					"name": "Create TipoValoracion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "527f8088-a2e1-4e04-a626-515f57fe5db4",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_valoracion = responseJSON || {};",
									"",
									"tests['TipoValoracion has \"_id\" property'] = tipo_valoracion.hasOwnProperty('_id');",
									"tests['TipoValoracion has \"valor\" property'] = tipo_valoracion.hasOwnProperty('valor');",
									"",
									"if(tests['TipoValoracion has \"_id\" property']){",
									"    postman.setEnvironmentVariable('tipo_valoracion_id', tipo_valoracion._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoValoracion 1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoValoracion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0e6dbcf-2fe8-4384-8f33-29e1a6de5217",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    var tipo_valoracion = responseJSON || {};",
									"    ",
									"    tests['TipoValoracion has \"valor\" property'] = tipo_valoracion.hasOwnProperty('valor');",
									"    tests['TipoValoracion has \"id\" property'] = tipo_valoracion.hasOwnProperty('_id');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoValoracion 2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion/{{tipo_valoracion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion",
								"{{tipo_valoracion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoValoraciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15763f95-7b24-4f1e-a165-9f47ab6385e6",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    ",
									"    if(responseJSON.length > 0){",
									"        var tipo_valoracion = responseJSON[0];",
									"",
									"        tests['TipoValoracion has \"valor\" property'] = tipo_valoracion.hasOwnProperty('valor');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains tipo_valoraciones'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoValoracion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81d9f835-c26b-4b2b-8299-aeb9baf522b9",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var tipo_valoracion = responseJSON || {};",
									"",
									"tests['TipoValoracion has \"_id\" property'] = tipo_valoracion.hasOwnProperty('_id');",
									"tests['TipoValoracion has \"valor\" property'] = tipo_valoracion.hasOwnProperty('valor');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion/{{tipo_valoracion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion",
								"{{tipo_valoracion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TipoValoracion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "643e22ad-d5c7-43d4-970a-1b8afaad4f5a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoValoracion 1\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update TipoValoracion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02847a05-16b6-4169-b9ad-b455127c1710",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"valor\":\"TipoValoracion 2\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion/{{tipo_valoracion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion",
								"{{tipo_valoracion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All TipoValoraciones No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c4b72a8-c1af-4635-86db-bce083a8ad74",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TipoValoracion No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b3aac3c-a1c1-4568-a693-6d40347d57bd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion/{{tipo_valoracion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion",
								"{{tipo_valoracion_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Proyecto",
			"description": null,
			"item": [
				{
					"name": "Init",
					"description": null,
					"item": [
						{
							"name": "Create Proyecto",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91cd5951-cf37-4c5d-b01b-b2af2b22cd42",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"",
											"var proyecto = responseJSON || {};",
											"",
											"tests['Proyecto has \"_id\" property'] = proyecto.hasOwnProperty('_id');",
											"tests['Proyecto has \"nombre\" property'] = proyecto.hasOwnProperty('nombre');",
											"tests['Proyecto has \"titulo\" property'] = proyecto.hasOwnProperty('titulo');",
											"tests['Proyecto has \"gestor\" property'] = proyecto.hasOwnProperty('gestor');",
											"tests['Proyecto has \"ong_agrupacion\" property'] = proyecto.hasOwnProperty('ong_agrupacion');",
											"tests['Proyecto has \"pais\" property'] = proyecto.hasOwnProperty('pais');",
											"tests['Proyecto has \"provincia_municipio\" property'] = proyecto.hasOwnProperty('provincia_municipio');",
											"tests['Proyecto has \"socio_local\" property'] = proyecto.hasOwnProperty('socio_local');",
											"tests['Proyecto has \"aportacion_ong\" property'] = proyecto.hasOwnProperty('aportacion_ong');",
											"if(tests['Proyecto has \"_id\" property']){",
											"    postman.setEnvironmentVariable('proyecto_id', proyecto._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"aportacion_ong\": \"100\",\n    \"socio_local\": \"120\",\n    \"provincia_municipio\": \"Provincia\",\n    \"ong_agrupacion\": \"Ong_agrupacion\",\n    \"gestor\": \"gestor\",\n    \"titulo\": \"Proyecto 1\",\n    \"nombre\": \"Proyecto 1\",\n    \"codigo\": \"Proyecto_1\",\n    \"pais\":[\"{{pais_id}}\"]\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Proyecto",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d2bce79-f165-4296-aa0d-6d1bc9b395d5",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"    ",
											"    var proyecto = responseJSON || {};",
											"    ",
											"    tests['Proyecto has \"_id\" property'] = proyecto.hasOwnProperty('_id');",
											"    tests['Proyecto has \"nombre\" property'] = proyecto.hasOwnProperty('nombre');",
											"    tests['Proyecto has \"titulo\" property'] = proyecto.hasOwnProperty('titulo');",
											"    tests['Proyecto has \"gestor\" property'] = proyecto.hasOwnProperty('gestor');",
											"    tests['Proyecto has \"ong_agrupacion\" property'] = proyecto.hasOwnProperty('ong_agrupacion');",
											"    tests['Proyecto has \"pais\" property'] = proyecto.hasOwnProperty('pais');",
											"    tests['Proyecto has \"provincia_municipio\" property'] = proyecto.hasOwnProperty('provincia_municipio');",
											"    tests['Proyecto has \"socio_local\" property'] = proyecto.hasOwnProperty('socio_local');",
											"    tests['Proyecto has \"aportacion_ong\" property'] = proyecto.hasOwnProperty('aportacion_ong');",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"aportacion_ong\": \"100\",\n    \"socio_local\": \"120\",\n    \"provincia_municipio\": \"Provincia\",\n    \"ong_agrupacion\": \"Ong_agrupacion\",\n    \"gestor\": \"gestor\",\n    \"titulo\": \"Proyecto 1\",\n    \"nombre\": \"Proyecto 1\",\n    \"codigo\": \"Proyecto_1\",\n    \"pais\":[\"{{pais_id}}\"]\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Proyecto",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2b85cd5-f517-4826-b070-e6593cc0d8b7",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var proyecto = responseJSON || {};",
											"",
											" tests['Proyecto has \"_id\" property'] = proyecto.hasOwnProperty('_id');",
											"    tests['Proyecto has \"nombre\" property'] = proyecto.hasOwnProperty('nombre');",
											"    tests['Proyecto has \"titulo\" property'] = proyecto.hasOwnProperty('titulo');",
											"    tests['Proyecto has \"gestor\" property'] = proyecto.hasOwnProperty('gestor');",
											"    tests['Proyecto has \"ong_agrupacion\" property'] = proyecto.hasOwnProperty('ong_agrupacion');",
											"    tests['Proyecto has \"pais\" property'] = proyecto.hasOwnProperty('pais');",
											"    tests['Proyecto has \"provincia_municipio\" property'] = proyecto.hasOwnProperty('provincia_municipio');",
											"    tests['Proyecto has \"socio_local\" property'] = proyecto.hasOwnProperty('socio_local');",
											"    tests['Proyecto has \"aportacion_ong\" property'] = proyecto.hasOwnProperty('aportacion_ong');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Proyectos",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44810470-f85e-4bb9-b176-cc58ec97a9c7",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON.length > 0){",
											"        var proyecto = responseJSON[0];",
											"",
											"        tests['Proyecto has \"_id\" property'] = proyecto.hasOwnProperty('_id');",
											"    tests['Proyecto has \"nombre\" property'] = proyecto.hasOwnProperty('nombre');",
											"    tests['Proyecto has \"titulo\" property'] = proyecto.hasOwnProperty('titulo');",
											"    tests['Proyecto has \"gestor\" property'] = proyecto.hasOwnProperty('gestor');",
											"    tests['Proyecto has \"ong_agrupacion\" property'] = proyecto.hasOwnProperty('ong_agrupacion');",
											"    tests['Proyecto has \"pais\" property'] = proyecto.hasOwnProperty('pais');",
											"    tests['Proyecto has \"provincia_municipio\" property'] = proyecto.hasOwnProperty('provincia_municipio');",
											"    tests['Proyecto has \"socio_local\" property'] = proyecto.hasOwnProperty('socio_local');",
											"    tests['Proyecto has \"aportacion_ong\" property'] = proyecto.hasOwnProperty('aportacion_ong');",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains proyectos'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Entidades",
					"description": null,
					"item": [
						{
							"name": "Create Entidad",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53eb89e9-ce3a-4552-969f-7fce56d4f639",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var entidad = responseJSON || {};",
											"",
											"tests['Entidad has \"_id\" property'] = entidad.hasOwnProperty('_id');",
											"tests['Entidad has \"nombre\" property'] = entidad.hasOwnProperty('nombre');",
											"",
											"if(tests['Entidad has \"_id\" property']){",
											"    postman.setEnvironmentVariable('entidad_id', entidad._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"nombre\":\"Entidad 1\"}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/entidad",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"entidad"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Entidad",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "94c47606-3cf2-4d33-af71-81149e6c08e7",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"   ",
											"    var entidad = responseJSON || {};",
											"    ",
											"    tests['Entidad has \"_id\" property'] = entidad.hasOwnProperty('_id');",
											"    tests['Entidad has \"nombre\" property'] = entidad.hasOwnProperty('nombre');",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"nombre\":\"Entidad 1 MOD\"}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/entidad/{{entidad_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"entidad",
										"{{entidad_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Entidades",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16ee14b6-1899-405f-b44e-d089e01b9af8",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON.length > 0){",
											"        var entidad = responseJSON[0];",
											"",
											"         tests['Entidad has \"_id\" property'] = entidad.hasOwnProperty('_id');",
											"         tests['Entidad has \"nombre\" property'] = entidad.hasOwnProperty('nombre');",
											"",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains entidades'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/entidad",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"entidad"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Entidad",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8911408-a5ac-4c76-b004-0cd593000d47",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var entidad = responseJSON || {};",
											"",
											"tests['Entidad has \"_id\" property'] = entidad.hasOwnProperty('_id');",
											"tests['Entidad has \"nombre\" property'] = entidad.hasOwnProperty('nombre');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/entidad/{{entidad_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"entidad",
										"{{entidad_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ObjetivoGeneral",
					"description": null,
					"item": [
						{
							"name": "Init",
							"description": null,
							"item": [
								{
									"name": "Create ObjetivoGeneral",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14fbcaf0-60d1-4c48-a5df-a17084917012",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var objetivo = responseJSON || {};",
													"",
													"tests['Objetivo has \"_id\" property'] = objetivo.hasOwnProperty('_id');",
													"tests['Objetivo has \"codigo\" property'] = objetivo.hasOwnProperty('codigo');",
													"tests['Objetivo has \"descripcion\" property'] = objetivo.hasOwnProperty('descripcion');",
													"tests['Objetivo has \"general\" property'] = objetivo.hasOwnProperty('general');",
													"tests['Objetivo has \"hipotesis\" property'] = objetivo.hasOwnProperty('hipotesis');",
													"tests['Objetivo has \"indicadores\" property'] = objetivo.hasOwnProperty('indicadores');",
													"tests['Objetivo has \"resultados\" property'] = objetivo.hasOwnProperty('resultados');",
													"if(tests['Objetivo has \"_id\" property']){",
													"    postman.setEnvironmentVariable('objetivo_id', objetivo._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"codigo\": \"OG\",\n\t\"descripcion\":\"Descripción Objetivo General\",\n\t\"general\": true,\n\t\"indicadores\":null,\n\t\"hipotesis\":null,\n\t\"resultados\":null\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update ObjetivoGeneral",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33bc6314-8387-44be-bbb5-f49c51a76942",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    var objetivo = responseJSON || {};",
													"    ",
													"    tests['Objetivo has \"_id\" property'] = objetivo.hasOwnProperty('_id');",
													"    tests['Objetivo has \"codigo\" property'] = objetivo.hasOwnProperty('codigo');",
													"    tests['Objetivo has \"descripcion\" property'] = objetivo.hasOwnProperty('descripcion');",
													"    tests['Objetivo has \"general\" property'] = objetivo.hasOwnProperty('general');",
													"    tests['Objetivo has \"hipotesis\" property'] = objetivo.hasOwnProperty('hipotesis');",
													"    tests['Objetivo has \"indicadores\" property'] = objetivo.hasOwnProperty('indicadores');",
													"    tests['Objetivo has \"resultados\" property'] = objetivo.hasOwnProperty('resultados');",
													"    ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"codigo\": \"OE1 MOD\",\n\t\"descripcion\":\"Descripción OE1 MOD\",\n\t\"general\": false,\n\t\"indicadores\":null,\n\t\"hipotesis\":null,\n\t\"resultados\":null\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo",
												"{{objetivo_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get ObjetivoGeneral",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d633b39c-3096-4948-81dd-b64374b184ef",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON){",
													"        var objetivo = responseJSON;",
													"",
													"        tests['Objetivo has \"_id\" property'] = objetivo.hasOwnProperty('_id');",
													"        tests['Objetivo has \"codigo\" property'] = objetivo.hasOwnProperty('codigo');",
													"        tests['Objetivo has \"descripcion\" property'] = objetivo.hasOwnProperty('descripcion');",
													"        tests['Objetivo has \"general\" property'] = objetivo.hasOwnProperty('general');",
													"        tests['Objetivo has \"hipotesis\" property'] = objetivo.hasOwnProperty('hipotesis');",
													"        tests['Objetivo has \"indicadores\" property'] = objetivo.hasOwnProperty('indicadores');",
													"        tests['Objetivo has \"resultados\" property'] = objetivo.hasOwnProperty('resultados');",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains objetivo'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Indicadores",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Init",
									"description": null,
									"item": [
										{
											"name": "Create Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cfc3a407-d8ec-4c6f-89db-46a41ac49278",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var indicador = responseJSON || {};",
															"",
															"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"if(tests['Indicador has \"_id\" property']){",
															"    postman.setEnvironmentVariable('og_indicador_id', indicador._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1\",\n\t\t\"linea_base\": \"100\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3af3231b-fa1f-478f-b8af-2aef0523e44e",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"  ",
															"    var indicador = responseJSON || {};",
															"    ",
															"    tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"    tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"    tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"    tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"    tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"    tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"    tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"    tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"    tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"    tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1 MOD\",\n\t\t\"linea_base\": \"120\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"comentario ong en MOD\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffbd88c8-d9d5-4857-a2f2-af2efb775acc",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var indicador = responseJSON || {};",
															"",
															"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All Indicadores",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "225578b2-b717-4707-ac2c-e9362d26990d",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    ",
															"    if(responseJSON.length > 0){",
															"        var indicador = responseJSON[0];",
															"",
															"        tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"        tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"        tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"        tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"        tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"        tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"        tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"        tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"        tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"        tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains indicadores'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "FuentesVerificacion",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b737ecb-530a-464e-924a-3781beb0e3b5",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var fuente_verificacion = responseJSON || {};",
															"",
															"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"if(tests['FuenteVerificacion has \"_id\" property']){",
															"    postman.setEnvironmentVariable('og_fuente_verificacion_id', fuente_verificacion._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/fuentes_verificacion",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"fuentes_verificacion"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37821427-92a9-4095-965e-f7b235c489e2",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"   ",
															"    var fuente_verificacion = responseJSON || {};",
															"    ",
															"    tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"    tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"    tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1 MOD\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1 MOD\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/fuentes_verificacion/{{og_fuente_verificacion_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"fuentes_verificacion",
														"{{og_fuente_verificacion_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All FuentesVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3723442-601d-46c3-a795-41a2d1b744b0",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    if(responseJSON.length > 0){",
															"        var fuente_verificacion = responseJSON[0];",
															"",
															"        tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"        tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"        tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"      ",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains fuentes_verificacion'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/fuentes_verificacion",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"fuentes_verificacion"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "94c67032-f10c-4d26-ac25-44260ab924cb",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var fuente_verificacion = responseJSON || {};",
															"",
															"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/fuentes_verificacion/{{og_fuente_verificacion_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"fuentes_verificacion",
														"{{og_fuente_verificacion_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Medidas",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create Medidas",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1914524e-061c-46e1-bb40-83754077d3ce",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var medida = responseJSON || {};",
															"",
															"tests['Medida has \"_id\" property'] = medida.hasOwnProperty('_id');",
															"tests['Medida has \"valor\" property'] = medida.hasOwnProperty('valor');",
															"tests['Medida has \"comentario\" property'] = medida.hasOwnProperty('comentario');",
															"if(tests['Medida has \"_id\" property']){",
															"    postman.setEnvironmentVariable('medida_id', medida._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"valor\": \"1111\",\n\t\t\"comentario\": \"Descripcion de la medida\",\n\t\t\"fecha\": \"01/01/2018\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/medida",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"medida"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Medidas",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d6434c1d-926d-4768-8536-da594d30063d",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"   ",
															"   var medida = responseJSON || {};",
															"",
															"tests['Medida has \"_id\" property'] = medida.hasOwnProperty('_id');",
															"tests['Medida has \"valor\" property'] = medida.hasOwnProperty('valor');",
															"tests['Medida has \"comentario\" property'] = medida.hasOwnProperty('comentario');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"valor\": \"1115551\",\n\t\t\"comentario\": \"Descripcion de la medisa\",\n\t\t\"fecha\": \"01/01/2018\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/medida/{{medida_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"medida",
														"{{medida_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All Medidas",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "086cfeb8-3aad-4df6-ad43-fed25d517c07",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    if(responseJSON.length > 0){",
															"       var medida = responseJSON[0] || {};",
															"",
															"tests['Medida has \"_id\" property'] = medida.hasOwnProperty('_id');",
															"tests['Medida has \"valor\" property'] = medida.hasOwnProperty('valor');",
															"tests['Medida has \"comentario\" property'] = medida.hasOwnProperty('comentario');",
															"      ",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains medida'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/medida",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"medida"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Medidas",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37ddd209-6652-495e-b50e-38e388a01f83",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var medida = responseJSON || {};",
															"",
															"tests['Medida has \"_id\" property'] = medida.hasOwnProperty('_id');",
															"tests['Medida has \"valor\" property'] = medida.hasOwnProperty('valor');",
															"tests['Medida has \"comentario\" property'] = medida.hasOwnProperty('comentario');",
															"",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/medida/{{medida_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"medida",
														"{{medida_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Progreso",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ee18604-501b-44b3-9694-b4f33b4d224c",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var progreso = responseJSON",
															"",
															"tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"if(tests['Progreso has \"_id\" property']){",
															"    postman.setEnvironmentVariable('progreso_id', progreso._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"fecha\": \"01/01/2018\",\n\t\t\"porcentaje\": 13\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/progreso",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"progreso"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed7d2bff-cfb6-4dcf-bca4-702505a7c33c",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															" ",
															"    var progreso = responseJSON || {};",
															"    ",
															"    tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"    tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"    tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\t\"fecha\": \"01/02/2018\",\n\t\t\"porcentaje\": 78\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/progreso/{{progreso_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"progreso",
														"{{progreso_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b598f51a-d1b4-480b-9310-f35a771a1c77",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    if(responseJSON){",
															"        var progreso = responseJSON;",
															"",
															"        tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"        tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"        tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"      ",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains progreso'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}/progreso",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo",
														"{{objetivo_id}}",
														"indicador",
														"{{og_indicador_id}}",
														"progreso"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Aportaciones",
					"description": null,
					"item": [
						{
							"name": "Create Aportacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebc49ae6-06e3-40b1-bccc-a873705126f1",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var aportacion = responseJSON || {};",
											"",
											"tests['Aportacion has \"_id\" property'] = aportacion.hasOwnProperty('_id');",
											"tests['Aportacion has \"cofinanciador\" property'] = aportacion.hasOwnProperty('cofinanciador');",
											"tests['Aportacion has \"cuantia\" property'] = aportacion.hasOwnProperty('cuantia');",
											"",
											"if(tests['Aportacion has \"_id\" property']){",
											"    postman.setEnvironmentVariable('aportacion_id', aportacion._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n\t\t\t\"cofinanciador\": {\"_id\":\"{{cofinanciador_id}}\", \"valor\": \"cof 1\", \"empresa\": \"{{empresa_id}}\"},\n\t\t\t\"cuantia\":1000\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/aportacion",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"aportacion"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Aportacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a55d104-3d7e-4074-9e08-bcd43d2c1596",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"    ",
											"    var aportacion = responseJSON || {};",
											"    tests['Aportacion has \"_id\" property'] = aportacion.hasOwnProperty('_id');",
											"    tests['Aportacion has \"cofinanciador\" property'] = aportacion.hasOwnProperty('cofinanciador');",
											"    tests['Aportacion has \"cuantia\" property'] = aportacion.hasOwnProperty('cuantia');",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n\t\t\t\"cofinanciador\": {\"_id\":\"{{cofinanciador_id}}\", \"valor\": \"cof 1\", \"empresa\": \"{{empresa_id}}\"},\n\t\t\t\"cuantia\":345\n\t\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/aportacion/{{aportacion_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"aportacion",
										"{{aportacion_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Aportaciones",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dc9ecf6-9d3b-4ea2-9129-3824819a7f21",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON.length > 0){",
											"        var aportacion = responseJSON[0];",
											"",
											"    ",
											"        tests['Aportacion has \"_id\" property'] = aportacion.hasOwnProperty('_id');",
											"tests['Aportacion has \"cofinanciador\" property'] = aportacion.hasOwnProperty('cofinanciador');",
											"tests['Aportacion has \"cuantia\" property'] = aportacion.hasOwnProperty('cuantia');",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains aportaciones'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/aportacion",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"aportacion"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Aportacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5b6d209-1701-4198-9925-06e0290449c4",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var aportacion = responseJSON || {};",
											"",
											"tests['Aportacion has \"_id\" property'] = aportacion.hasOwnProperty('_id');",
											"tests['Aportacion has \"cofinanciador\" property'] = aportacion.hasOwnProperty('cofinanciador');",
											"tests['Aportacion has \"cuantia\" property'] = aportacion.hasOwnProperty('cuantia');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/aportacion/{{aportacion_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"aportacion",
										"{{aportacion_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificaciones",
					"description": null,
					"item": [
						{
							"name": "Create Modificacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aab182b-0766-4250-bdbe-f7a2d2d09999",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var modificacion = responseJSON || {};",
											"",
											"tests['Modificacion has \"_id\" property'] = modificacion.hasOwnProperty('_id');",
											"tests['Modificacion has \"fecha\" property'] = modificacion.hasOwnProperty('fecha');",
											"tests['Modificacion has \"descripcion\" property'] = modificacion.hasOwnProperty('descripcion');",
											"if(tests['Modificacion has \"_id\" property']){",
											"    postman.setEnvironmentVariable('modificacion_id', modificacion._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\t\"descripcion\": \"Modificacion 1\",\n             \"fecha\": \"01/02/2018\"\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/modificacion",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"modificacion"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Modificacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da3788b1-522e-4f7d-9bfd-b1d03d431005",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"   ",
											"    var modificacion = responseJSON || {};",
											"    ",
											"    tests['Modificacion has \"_id\" property'] = modificacion.hasOwnProperty('_id');",
											"    tests['Modificacion has \"fecha\" property'] = modificacion.hasOwnProperty('fecha');",
											"    tests['Modificacion has \"descripcion\" property'] = modificacion.hasOwnProperty('descripcion');",
											"        ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\t\"descripcion\": \"Modificacion 1 MOD\",\n             \"fecha\": \"01/03/2018\"\n\t\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/modificacion/{{modificacion_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"modificacion",
										"{{modificacion_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Modificaciones",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5228d3-c1d6-41fb-bba2-2e1c61272146",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON.length > 0){",
											"        var modificacion = responseJSON[0];",
											"",
											"        ",
											"        tests['Modificacion has \"_id\" property'] = modificacion.hasOwnProperty('_id');",
											"        tests['Modificacion has \"fecha\" property'] = modificacion.hasOwnProperty('fecha');",
											"        tests['Modificacion has \"descripcion\" property'] = modificacion.hasOwnProperty('descripcion');",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains modificaciones'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/modificacion",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"modificacion"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Modificacion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9e702ff-c593-4459-8814-c7487399fff9",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var modificacion = responseJSON || {};",
											"",
											"tests['Modificacion has \"_id\" property'] = modificacion.hasOwnProperty('_id');",
											"tests['Modificacion has \"descripcion\" property'] = modificacion.hasOwnProperty('descripcion');",
											"tests['Modificacion has \"fecha\" property'] = modificacion.hasOwnProperty('fecha');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/modificacion/{{modificacion_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"modificacion",
										"{{modificacion_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Personas",
					"description": null,
					"item": [
						{
							"name": "Create Persona",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07741428-6372-4a65-9742-4aa6609b9320",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var persona = responseJSON || {};",
											"",
											" tests['Persona has \"_id\" property'] = persona.hasOwnProperty('_id');",
											"    tests['Persona has \"nombre\" property'] = persona.hasOwnProperty('nombre');",
											"",
											"    tests['Persona has \"residencia\" property'] = persona.hasOwnProperty('residencia');",
											"",
											"    tests['Persona has \"horas_imputadas\" property'] = persona.hasOwnProperty('horas_imputadas');",
											"    tests['Persona has \"salario_mensual\" property'] = persona.hasOwnProperty('salario_mensual');",
											"    tests['Persona has \"meses\" property'] = persona.hasOwnProperty('meses');",
											"    tests['Persona has \"salario_total\" property'] = persona.hasOwnProperty('salario_total');",
											"if(tests['Persona has \"_id\" property']){",
											"    postman.setEnvironmentVariable('persona_id', persona._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\t\"nombre\":\"Persona 1\",\n\t\t\t\"categoria\":null,\n\t\t\t\"residencia\":\"Mi casa\",\n\t\t\t\"contrato\": null,\n\t\t\t\"horas_imputadas\":100,\n\t\t\t\"salario_mensual\":100,\n\t\t\t\"meses\":1,\n\t\t\t\"salario_total\":100,\n\t\t\t\"tipo_personal\":null\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/persona",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"persona"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Persona",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9df29e03-52ed-44a7-b160-2acfadb58114",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"   ",
											"    var persona = responseJSON || {};",
											"    ",
											"    tests['Persona has \"_id\" property'] = persona.hasOwnProperty('_id');",
											"    tests['Persona has \"nombre\" property'] = persona.hasOwnProperty('nombre');",
											"",
											"    tests['Persona has \"residencia\" property'] = persona.hasOwnProperty('residencia');",
											"",
											"    tests['Persona has \"horas_imputadas\" property'] = persona.hasOwnProperty('horas_imputadas');",
											"    tests['Persona has \"salario_mensual\" property'] = persona.hasOwnProperty('salario_mensual');",
											"    tests['Persona has \"meses\" property'] = persona.hasOwnProperty('meses');",
											"    tests['Persona has \"salario_total\" property'] = persona.hasOwnProperty('salario_total');",
											"",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\t\"nombre\":\"Persona 1\",\n\t\t\t\"categoria\":null,\n\t\t\t\"residencia\":\"Mi casa\",\n\t\t\t\"contrato\": null,\n\t\t\t\"horas_imputadas\":100,\n\t\t\t\"salario_mensual\":100,\n\t\t\t\"meses\":1,\n\t\t\t\"salario_total\":100,\n\t\t\t\"tipo_personal\":null\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/persona/{{persona_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"persona",
										"{{persona_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Personas",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54b73a60-b37e-4051-81c5-c66c13e7cf14",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON.length > 0){",
											"        var persona = responseJSON[0];",
											"    ",
											"         tests['Persona has \"_id\" property'] = persona.hasOwnProperty('_id');",
											"    tests['Persona has \"nombre\" property'] = persona.hasOwnProperty('nombre');",
											"",
											"    tests['Persona has \"residencia\" property'] = persona.hasOwnProperty('residencia');",
											"",
											"    tests['Persona has \"horas_imputadas\" property'] = persona.hasOwnProperty('horas_imputadas');",
											"    tests['Persona has \"salario_mensual\" property'] = persona.hasOwnProperty('salario_mensual');",
											"    tests['Persona has \"meses\" property'] = persona.hasOwnProperty('meses');",
											"    tests['Persona has \"salario_total\" property'] = persona.hasOwnProperty('salario_total');",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains personas'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/persona",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"persona"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Persona",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0514f8a-5d50-4ebb-b526-08656435fc8e",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var persona = responseJSON || {};",
											"",
											" tests['Persona has \"_id\" property'] = persona.hasOwnProperty('_id');",
											"    tests['Persona has \"nombre\" property'] = persona.hasOwnProperty('nombre');",
											"",
											"    tests['Persona has \"residencia\" property'] = persona.hasOwnProperty('residencia');",
											"",
											"    tests['Persona has \"horas_imputadas\" property'] = persona.hasOwnProperty('horas_imputadas');",
											"    tests['Persona has \"salario_mensual\" property'] = persona.hasOwnProperty('salario_mensual');",
											"    tests['Persona has \"meses\" property'] = persona.hasOwnProperty('meses');",
											"    tests['Persona has \"salario_total\" property'] = persona.hasOwnProperty('salario_total');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/persona/{{persona_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"persona",
										"{{persona_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CuentasBancarias",
					"description": null,
					"item": [
						{
							"name": "Init",
							"description": null,
							"item": [
								{
									"name": "Create CuentaBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9040e68-37f2-4f4c-9b84-740e6fca4977",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"",
													"var cuenta_bancaria = responseJSON || {};",
													"",
													"tests['CuentaBancaria has \"_id\" property'] = cuenta_bancaria.hasOwnProperty('_id');",
													"tests['CuentaBancaria has \"pais\" property'] = cuenta_bancaria.hasOwnProperty('pais');",
													"tests['CuentaBancaria has \"entidad\" property'] = cuenta_bancaria.hasOwnProperty('entidad');",
													"tests['CuentaBancaria has \"ncuenta\" property'] = cuenta_bancaria.hasOwnProperty('ncuenta');",
													"tests['CuentaBancaria has \"moneda\" property'] = cuenta_bancaria.hasOwnProperty('moneda');",
													"tests['CuentaBancaria has \"localizacion\" property'] = cuenta_bancaria.hasOwnProperty('localizacion');",
													"tests['CuentaBancaria has \"operaciones_bancarias\" property'] = cuenta_bancaria.hasOwnProperty('operaciones_bancarias');",
													"if(tests['CuentaBancaria has \"_id\" property']){",
													"    postman.setEnvironmentVariable('cuenta_bancaria_id', cuenta_bancaria._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\t\"pais\": \"{{pais_id}}\",\n\t\t\t\"entidad\":\"ING DIRECT\",\n\t\t\t\"ncuenta\": \"1234-1234-12-1234567890\",\n\t\t\t\"moneda\":\"{{moneda_id}}\",\n\t\t\t\"localizacion\":\"{{localizacion_id}}\",\n\t\t\t\"operaciones_bancarias\": null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update CuentaBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db5a7538-91ab-46ee-a1df-e6804ac157d3",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    var cuenta_bancaria = responseJSON || {};",
													"    ",
													"    tests['CuentaBancaria has \"_id\" property'] = cuenta_bancaria.hasOwnProperty('_id');",
													"    tests['CuentaBancaria has \"pais\" property'] = cuenta_bancaria.hasOwnProperty('pais');",
													"    tests['CuentaBancaria has \"entidad\" property'] = cuenta_bancaria.hasOwnProperty('entidad');",
													"    tests['CuentaBancaria has \"ncuenta\" property'] = cuenta_bancaria.hasOwnProperty('ncuenta');",
													"    tests['CuentaBancaria has \"moneda\" property'] = cuenta_bancaria.hasOwnProperty('moneda');",
													"    tests['CuentaBancaria has \"localizacion\" property'] = cuenta_bancaria.hasOwnProperty('localizacion');",
													"    tests['CuentaBancaria has \"operaciones_bancarias\" property'] = cuenta_bancaria.hasOwnProperty('operaciones_bancarias');",
													"        ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\t\"pais\": \"{{pais_id}}\",\n\t\t\t\"entidad\":\"ING DIRECT\",\n\t\t\t\"ncuenta\": \"1234-1234-34-7654986754\",\n\t\t\t\"moneda\":\"{{moneda_id}}\",\n\t\t\t\"localizacion\":\"{{localizacion_id}}\",\n\t\t\t\"operaciones_bancarias\": null\n\t\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All CuentasBancarias",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4aa98bf-d447-4bfa-aca1-681357918a92",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    if(responseJSON.length > 0){",
													"       ",
													"",
													"        var cuenta_bancaria = responseJSON[0] || {};",
													"        ",
													"        tests['CuentaBancaria has \"_id\" property'] = cuenta_bancaria.hasOwnProperty('_id');",
													"        tests['CuentaBancaria has \"pais\" property'] = cuenta_bancaria.hasOwnProperty('pais');",
													"        tests['CuentaBancaria has \"entidad\" property'] = cuenta_bancaria.hasOwnProperty('entidad');",
													"        tests['CuentaBancaria has \"ncuenta\" property'] = cuenta_bancaria.hasOwnProperty('ncuenta');",
													"        tests['CuentaBancaria has \"moneda\" property'] = cuenta_bancaria.hasOwnProperty('moneda');",
													"        tests['CuentaBancaria has \"localizacion\" property'] = cuenta_bancaria.hasOwnProperty('localizacion');",
													"        tests['CuentaBancaria has \"operaciones_bancarias\" property'] = cuenta_bancaria.hasOwnProperty('operaciones_bancarias');",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains cuentas_bancarias'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get CuentaBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bea103db-7385-461c-9572-6ee1b6df509f",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"",
													"var cuenta_bancaria = responseJSON || {};",
													"",
													"tests['CuentaBancaria has \"_id\" property'] = cuenta_bancaria.hasOwnProperty('_id');",
													"tests['CuentaBancaria has \"pais\" property'] = cuenta_bancaria.hasOwnProperty('pais');",
													"tests['CuentaBancaria has \"entidad\" property'] = cuenta_bancaria.hasOwnProperty('entidad');",
													"tests['CuentaBancaria has \"ncuenta\" property'] = cuenta_bancaria.hasOwnProperty('ncuenta');",
													"tests['CuentaBancaria has \"moneda\" property'] = cuenta_bancaria.hasOwnProperty('moneda');",
													"tests['CuentaBancaria has \"localizacion\" property'] = cuenta_bancaria.hasOwnProperty('localizacion');",
													"tests['CuentaBancaria has \"operaciones_bancarias\" property'] = cuenta_bancaria.hasOwnProperty('operaciones_bancarias');",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "OperacionesBancarias",
							"description": null,
							"item": [
								{
									"name": "Create OperacionBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "040afcdf-4e66-4480-bf59-71dbfefb9ef2",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var operacion_bancaria = responseJSON || {};",
													"",
													"  tests['OperacionBancaria has \"_id\" property'] = operacion_bancaria.hasOwnProperty('_id');",
													"    tests['OperacionBancaria has \"fecha\" property'] = operacion_bancaria.hasOwnProperty('fecha');",
													"    tests['OperacionBancaria has \"importe\" property'] = operacion_bancaria.hasOwnProperty('importe');",
													"    ",
													"    tests['OperacionBancaria has \"tasa_cambio_local\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_local');",
													"    tests['OperacionBancaria has \"tasa_cambio_euro\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_euro');",
													"    tests['OperacionBancaria has \"financiador\" property'] = operacion_bancaria.hasOwnProperty('financiador');",
													"   ",
													"    tests['OperacionBancaria has \"tipo_movimiento\" property'] = operacion_bancaria.hasOwnProperty('tipo_movimiento');",
													"if(tests['OperacionBancaria has \"_id\" property']){",
													"    postman.setEnvironmentVariable('operacion_bancaria_id', operacion_bancaria._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\t\"fecha\": \"01/02/2018\",\n\t\t\t\"importe\":1000,\n\t\t\t\"tasa_cambio_local\":0,\n\t\t\t\"tasa_cambio_euro\":0,\n\t\t\t\"financiador\": null,\n\t\t\t\"tipo_movimiento\": null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}/operacion_bancaria",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}",
												"operacion_bancaria"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update OperacionBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "562505a4-fe7a-4696-9292-8dafe638fafb",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"  ",
													"    var operacion_bancaria = responseJSON || {};",
													"    ",
													"    tests['OperacionBancaria has \"_id\" property'] = operacion_bancaria.hasOwnProperty('_id');",
													"    tests['OperacionBancaria has \"fecha\" property'] = operacion_bancaria.hasOwnProperty('fecha');",
													"    tests['OperacionBancaria has \"importe\" property'] = operacion_bancaria.hasOwnProperty('importe');",
													"    ",
													"    tests['OperacionBancaria has \"tasa_cambio_local\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_local');",
													"    tests['OperacionBancaria has \"tasa_cambio_euro\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_euro');",
													"    tests['OperacionBancaria has \"financiador\" property'] = operacion_bancaria.hasOwnProperty('financiador');",
													"   ",
													"    tests['OperacionBancaria has \"tipo_movimiento\" property'] = operacion_bancaria.hasOwnProperty('tipo_movimiento');",
													"        ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\t\"fecha\": \"01/02/2018\",\n\t\t\t\"importe\":1000,\n\t\t\t\"tasa_cambio_local\":0,\n\t\t\t\"tasa_cambio_euro\":0,\n\t\t\t\"financiador\": null,\n\t\t\t\"tipo_movimiento\": null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}/operacion_bancaria/{{operacion_bancaria_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}",
												"operacion_bancaria",
												"{{operacion_bancaria_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All OperacionesBancarias",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4a16a8f-43d5-4fb6-aca2-923e96c0241d",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON.length > 0){",
													"       ",
													"",
													"        var operacion_bancaria = responseJSON[0] || {};",
													"        ",
													"         tests['OperacionBancaria has \"_id\" property'] = operacion_bancaria.hasOwnProperty('_id');",
													"    tests['OperacionBancaria has \"fecha\" property'] = operacion_bancaria.hasOwnProperty('fecha');",
													"    tests['OperacionBancaria has \"importe\" property'] = operacion_bancaria.hasOwnProperty('importe');",
													"    ",
													"    tests['OperacionBancaria has \"tasa_cambio_local\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_local');",
													"    tests['OperacionBancaria has \"tasa_cambio_euro\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_euro');",
													"    tests['OperacionBancaria has \"financiador\" property'] = operacion_bancaria.hasOwnProperty('financiador');",
													"   ",
													"    tests['OperacionBancaria has \"tipo_movimiento\" property'] = operacion_bancaria.hasOwnProperty('tipo_movimiento');",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains operaciones_bancarias'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}/operacion_bancaria",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}",
												"operacion_bancaria"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get OperacionBancaria",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d5b427d-ab6f-41cd-8641-56a2618286a2",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var operacion_bancaria = responseJSON || {};",
													"",
													"  tests['OperacionBancaria has \"_id\" property'] = operacion_bancaria.hasOwnProperty('_id');",
													"    tests['OperacionBancaria has \"fecha\" property'] = operacion_bancaria.hasOwnProperty('fecha');",
													"    tests['OperacionBancaria has \"importe\" property'] = operacion_bancaria.hasOwnProperty('importe');",
													"    ",
													"    tests['OperacionBancaria has \"tasa_cambio_local\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_local');",
													"    tests['OperacionBancaria has \"tasa_cambio_euro\" property'] = operacion_bancaria.hasOwnProperty('tasa_cambio_euro');",
													"    tests['OperacionBancaria has \"financiador\" property'] = operacion_bancaria.hasOwnProperty('financiador');",
													"   ",
													"    tests['OperacionBancaria has \"tipo_movimiento\" property'] = operacion_bancaria.hasOwnProperty('tipo_movimiento');",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}/operacion_bancaria/{{operacion_bancaria_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"cuenta_bancaria",
												"{{cuenta_bancaria_id}}",
												"operacion_bancaria",
												"{{operacion_bancaria_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Gastos",
					"description": null,
					"item": [
						{
							"name": "Init",
							"description": null,
							"item": [
								{
									"name": "Create Gasto",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b1f0e0c-bcb2-4715-8400-ca3692763872",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var gasto = responseJSON || {};",
													"",
													"tests['Gasto has \"_id\" property'] = gasto.hasOwnProperty('_id');",
													"tests['Gasto has \"fecha\" property'] = gasto.hasOwnProperty('fecha');",
													"tests['Gasto has \"numero_orden\" property'] = gasto.hasOwnProperty('numero_orden');",
													"tests['Gasto has \"emisor\" property'] = gasto.hasOwnProperty('emisor');",
													"tests['Gasto has \"concepto\" property'] = gasto.hasOwnProperty('concepto');",
													"tests['Gasto has \"importe_local\" property'] = gasto.hasOwnProperty('importe_local');",
													"tests['Gasto has \"tipo_de_cambio_dm\" property'] = gasto.hasOwnProperty('tipo_de_cambio_dm');",
													"tests['Gasto has \"tipo_de_cambio_ld\" property'] = gasto.hasOwnProperty('tipo_de_cambio_ld');",
													"",
													"",
													"",
													"tests['Gasto has \"documentos\" property'] = gasto.hasOwnProperty('documentos');",
													"if(tests['Gasto has \"_id\" property']){",
													"    postman.setEnvironmentVariable('gasto_id', gasto._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\t\"fecha\":\"01/01/2018\",\n\t\t\t\"numero_orden\":\"1234-5679\",\n\t\t\t\"emisor\":\"Yo\",\n\t\t\t\"concepto\": \"gasto\",\n\t\t\t\"importe_local\":100,\n\t\t\t\"tipo_de_cambio_dm\":null,\n\t\t\t\"tipo_de_cambio_ld\":null,\n\t\t\t\"moneda\":null,\n\t\t\t\"partida\":null,\n\t\t\t\"cofinanciador\":null,\n\t\t\t\"documentos\":null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Gasto",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8bf7c1e6-7cad-4461-a139-082f4580c7cc",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"   ",
													"    var gasto = responseJSON || {};",
													"    ",
													"    tests['Gasto has \"_id\" property'] = gasto.hasOwnProperty('_id');",
													"    tests['Gasto has \"fecha\" property'] = gasto.hasOwnProperty('fecha');",
													"    tests['Gasto has \"numero_orden\" property'] = gasto.hasOwnProperty('numero_orden');",
													"    tests['Gasto has \"emisor\" property'] = gasto.hasOwnProperty('emisor');",
													"    tests['Gasto has \"concepto\" property'] = gasto.hasOwnProperty('concepto');",
													"    tests['Gasto has \"importe_local\" property'] = gasto.hasOwnProperty('importe_local');",
													"    tests['Gasto has \"tipo_de_cambio_dm\" property'] = gasto.hasOwnProperty('tipo_de_cambio_dm');",
													"    tests['Gasto has \"tipo_de_cambio_ld\" property'] = gasto.hasOwnProperty('tipo_de_cambio_ld');",
													"   ",
													"    tests['Gasto has \"documentos\" property'] = gasto.hasOwnProperty('documentos');",
													"    ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\t\"fecha\":\"01/01/2018\",\n\t\t\t\"numero_orden\":\"1234-5679\",\n\t\t\t\"emisor\":\"Yo\",\n\t\t\t\"concepto\": \"gasto\",\n\t\t\t\"importe_local\":100,\n\t\t\t\"tipo_de_cambio_dm\":null,\n\t\t\t\"tipo_de_cambio_ld\":null,\n\t\t\t\"moneda\":null,\n\t\t\t\"partida\":null,\n\t\t\t\"cofinanciador\":null,\n\t\t\t\"documentos\":null\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All Gastos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2eddb4f5-93fa-4535-b2be-c111e30c366e",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON.length > 0){",
													"        var gasto = responseJSON[0] || {};",
													"    ",
													"        tests['Gasto has \"_id\" property'] = gasto.hasOwnProperty('_id');",
													"    tests['Gasto has \"fecha\" property'] = gasto.hasOwnProperty('fecha');",
													"    tests['Gasto has \"numero_orden\" property'] = gasto.hasOwnProperty('numero_orden');",
													"    tests['Gasto has \"emisor\" property'] = gasto.hasOwnProperty('emisor');",
													"    tests['Gasto has \"concepto\" property'] = gasto.hasOwnProperty('concepto');",
													"    tests['Gasto has \"importe_local\" property'] = gasto.hasOwnProperty('importe_local');",
													"    tests['Gasto has \"tipo_de_cambio_dm\" property'] = gasto.hasOwnProperty('tipo_de_cambio_dm');",
													"    tests['Gasto has \"tipo_de_cambio_ld\" property'] = gasto.hasOwnProperty('tipo_de_cambio_ld');",
													"   ",
													"    tests['Gasto has \"documentos\" property'] = gasto.hasOwnProperty('documentos');",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains gastos'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Gasto",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7df8e5fb-35c9-421d-8901-51d27b64686e",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var gasto = responseJSON || {};",
													"",
													"tests['Gasto has \"_id\" property'] = gasto.hasOwnProperty('_id');",
													"    tests['Gasto has \"fecha\" property'] = gasto.hasOwnProperty('fecha');",
													"    tests['Gasto has \"numero_orden\" property'] = gasto.hasOwnProperty('numero_orden');",
													"    tests['Gasto has \"emisor\" property'] = gasto.hasOwnProperty('emisor');",
													"    tests['Gasto has \"concepto\" property'] = gasto.hasOwnProperty('concepto');",
													"    tests['Gasto has \"importe_local\" property'] = gasto.hasOwnProperty('importe_local');",
													"    tests['Gasto has \"tipo_de_cambio_dm\" property'] = gasto.hasOwnProperty('tipo_de_cambio_dm');",
													"    tests['Gasto has \"tipo_de_cambio_ld\" property'] = gasto.hasOwnProperty('tipo_de_cambio_ld');",
													"   ",
													"    tests['Gasto has \"documentos\" property'] = gasto.hasOwnProperty('documentos');",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Documentos",
							"description": null,
							"item": [
								{
									"name": "Create Documento",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1dc6c48e-e3a1-4b7a-91a4-10303ed1e225",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var documento = responseJSON || {};",
													"",
													"tests['Documento has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"        tests['Documento has \"nombre\" property'] = documento.hasOwnProperty('nombre');",
													"        tests['Documento has \"ruta\" property'] = documento.hasOwnProperty('ruta');",
													"        tests['Documento has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"if(tests['Documento has \"_id\" property']){",
													"    postman.setEnvironmentVariable('documento_id', documento._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\n\t\t\"nombre\": \"Documento 1\",\n\t\t\"ruta\": \"local\",\n\t\t\"fecha\": \"01/01/2018\"\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/documentos",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"documentos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Documento",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1e740ccd-0ff0-404a-95ff-ff77ab099d74",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    var documento = responseJSON || {};",
													"    ",
													"    tests['Documento has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"        tests['Documento has \"nombre\" property'] = documento.hasOwnProperty('nombre');",
													"        tests['Documento has \"ruta\" property'] = documento.hasOwnProperty('ruta');",
													"        tests['Documento has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"    ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\n\t\t\"nombre\": \"Documento 1 MOD\",\n\t\t\"ruta\": \"local 1\",\n\t\t\"fecha\": \"01/01/2018\"\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/documentos/{{documento_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"documentos",
												"{{documento_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All Documentos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc119491-37cf-4ab2-a6c6-f878b5cb4d73",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON && responseJSON.length > 0){",
													"        var documento = responseJSON[0] || {};",
													"    ",
													"        tests['Documento has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"        tests['Documento has \"nombre\" property'] = documento.hasOwnProperty('nombre');",
													"        tests['Documento has \"ruta\" property'] = documento.hasOwnProperty('ruta');",
													"        tests['Documento has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains documento'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/documentos",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"documentos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Documento",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "042d910a-f57e-493b-b6e4-37eda3ecec28",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var documento = responseJSON || {};",
													"",
													"tests['Documento has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"        tests['Documento has \"nombre\" property'] = documento.hasOwnProperty('nombre');",
													"        tests['Documento has \"ruta\" property'] = documento.hasOwnProperty('ruta');",
													"        tests['Documento has \"fecha\" property'] = documento.hasOwnProperty('fecha');"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/documentos/{{documento_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"documentos",
												"{{documento_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Pagos",
							"description": null,
							"item": [
								{
									"name": "Create Pago",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62204eb4-f1ed-4c8c-94ba-6d29f451f729",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var pago = responseJSON || {};",
													"",
													"tests['Pago has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"tests['Pago has \"cuenta_origen\" property'] = documento.hasOwnProperty('cuenta_origen');",
													"tests['Pago has \"importe\" property'] = documento.hasOwnProperty('importe');",
													"tests['Pago has \"descripcion\" property'] = documento.hasOwnProperty('descripcion');",
													"tests['Pago has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"tests['Pago has \"tipo_movimiento\" property'] = documento.hasOwnProperty('tipo_movimiento');",
													"tests['Pago has \"cuenta_destino\" property'] = documento.hasOwnProperty('cuenta_destino');",
													"tests['Pago has \"num_cheque\" property'] = documento.hasOwnProperty('num_cheque');",
													"",
													"",
													"if(tests['Pago has \"_id\" property']){",
													"    postman.setEnvironmentVariable('pago_id', pago._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\"cuenta_origen\": \"{{cuenta_bancaria_id}}\" ,\n\t\"importe\": 100,\n\t\"descripcion\": \"Prueba\",\n\t\"fecha\": \"01/01/18\",\n\t\"tipo_movimiento\": \"{{tipo_moviminento_id}}\" ,\n\t\"cuenta_destino\": \"{{cuenta_bancaria_id}}\",\n\t\"num_cheque\": \"CHEQUE\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/pagos",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"pagos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Pago",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "762c44f4-440f-4144-a304-904f8bc26172",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    var pago = responseJSON || {};",
													"    ",
													"    tests['Pago has \"importe\" property'] = pago.hasOwnProperty('importe');",
													"    tests['Pago has \"descripcion\" property'] = pago.hasOwnProperty('descripcion');",
													"    tests['Pago has \"num_cheque\" property'] = pago.hasOwnProperty('num_cheque');",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\"importe\": 101,\n\t\"descripcion\": \"Prueba 1\",\n\t\"num_cheque\": \"CHEQUE 1\"\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/pagos/{{pago_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"pagos",
												"{{pago_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All Pagos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7dccb84-6893-4136-9474-49daada1f8a3",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON && responseJSON.length > 0){",
													"        var pago = responseJSON[0] || {};",
													"    ",
													"        tests['Pago has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"        tests['Pago has \"cuenta_origen\" property'] = documento.hasOwnProperty('cuenta_origen');",
													"        tests['Pago has \"importe\" property'] = documento.hasOwnProperty('importe');",
													"        tests['Pago has \"descripcion\" property'] = documento.hasOwnProperty('descripcion');",
													"        tests['Pago has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"        tests['Pago has \"tipo_movimiento\" property'] = documento.hasOwnProperty('tipo_movimiento');",
													"        tests['Pago has \"cuenta_destino\" property'] = documento.hasOwnProperty('cuenta_destino');",
													"        tests['Pago has \"num_cheque\" property'] = documento.hasOwnProperty('num_cheque');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains documento'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/pagos",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"pagos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Pago",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22b12b47-8bda-4eee-9888-ae660f13da0e",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var pago = responseJSON || {};",
													"",
													"tests['Pago has \"_id\" property'] = documento.hasOwnProperty('_id');",
													"tests['Pago has \"cuenta_origen\" property'] = documento.hasOwnProperty('cuenta_origen');",
													"tests['Pago has \"importe\" property'] = documento.hasOwnProperty('importe');",
													"tests['Pago has \"descripcion\" property'] = documento.hasOwnProperty('descripcion');",
													"tests['Pago has \"fecha\" property'] = documento.hasOwnProperty('fecha');",
													"tests['Pago has \"tipo_movimiento\" property'] = documento.hasOwnProperty('tipo_movimiento');",
													"tests['Pago has \"cuenta_destino\" property'] = documento.hasOwnProperty('cuenta_destino');",
													"tests['Pago has \"num_cheque\" property'] = documento.hasOwnProperty('num_cheque');"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/pagos/{{pago_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"gasto",
												"{{gasto_id}}",
												"pagos",
												"{{pago_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Bienes",
					"description": null,
					"item": [
						{
							"name": "Create Bien",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bca17f10-88be-491e-b101-167728c6f3ac",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var bien = responseJSON || {};",
											"",
											"tests['Bien has \"_id\" property'] = bien.hasOwnProperty('_id');",
											"tests['Bien has \"proveedor\" property'] = bien.hasOwnProperty('proveedor');",
											"tests['Bien has \"descripcion\" property'] = bien.hasOwnProperty('descripcion');",
											"tests['Bien has \"cantidad\" property'] = bien.hasOwnProperty('cantidad');",
											"tests['Bien has \"importe\" property'] = bien.hasOwnProperty('importe');",
											"tests['Bien has \"fecha\" property'] = bien.hasOwnProperty('fecha');",
											"if(tests['Bien has \"_id\" property']){",
											"    postman.setEnvironmentVariable('bien_id', bien._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\t\"proveedor\": \"Proveedor 1\",\n\t\t\t\"descripcion\":\"Bien 1\",\n\t\t\t\"cantidad\": 10,\n\t\t\t\"importe\":1000,\n\t\t\t\"fecha\":\"01/01/2018\"\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/bien",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"bien"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Bien",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71b37215-32c2-4edb-92a7-72b0d1bf7f75",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    var bien = responseJSON || {};",
											"    ",
											"    tests['Bien has \"_id\" property'] = bien.hasOwnProperty('_id');",
											"    tests['Bien has \"proveedor\" property'] = bien.hasOwnProperty('proveedor');",
											"    tests['Bien has \"descripcion\" property'] = bien.hasOwnProperty('descripcion');",
											"    tests['Bien has \"cantidad\" property'] = bien.hasOwnProperty('cantidad');",
											"    tests['Bien has \"importe\" property'] = bien.hasOwnProperty('importe');",
											"    tests['Bien has \"fecha\" property'] = bien.hasOwnProperty('fecha');",
											"        ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n\t\t\t\"proveedor\": \"Proveedor 1\",\n\t\t\t\"descripcion\":\"Bien 1\",\n\t\t\t\"cantidad\": 15,\n\t\t\t\"importe\":1500,\n\t\t\t\"fecha\":\"01/01/2018\"\n\t\t\n}\n"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/bien/{{bien_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"bien",
										"{{bien_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Bienes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ab9a0e1-b5aa-4d5f-98a7-91dd8a1235ff",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"  ",
											"    if(responseJSON.length > 0){",
											"       ",
											"",
											"        var bien = responseJSON[0] || {};",
											"        ",
											"        tests['Bien has \"_id\" property'] = bien.hasOwnProperty('_id');",
											"        tests['Bien has \"proveedor\" property'] = bien.hasOwnProperty('proveedor');",
											"        tests['Bien has \"descripcion\" property'] = bien.hasOwnProperty('descripcion');",
											"        tests['Bien has \"cantidad\" property'] = bien.hasOwnProperty('cantidad');",
											"        tests['Bien has \"importe\" property'] = bien.hasOwnProperty('importe');",
											"        tests['Bien has \"fecha\" property'] = bien.hasOwnProperty('fecha');",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains bienes'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/bien",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"bien"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Bien",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a77a84c-64dc-426d-b499-7c59afb6ad31",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var bien = responseJSON || {};",
											"",
											"tests['Bien has \"_id\" property'] = bien.hasOwnProperty('_id');",
											"tests['Bien has \"proveedor\" property'] = bien.hasOwnProperty('proveedor');",
											"tests['Bien has \"descripcion\" property'] = bien.hasOwnProperty('descripcion');",
											"tests['Bien has \"cantidad\" property'] = bien.hasOwnProperty('cantidad');",
											"tests['Bien has \"importe\" property'] = bien.hasOwnProperty('importe');",
											"tests['Bien has \"fecha\" property'] = bien.hasOwnProperty('fecha');",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/bien/{{bien_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"bien",
										"{{bien_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ObjetivosEspecificos",
					"description": null,
					"item": [
						{
							"name": "Init",
							"description": null,
							"item": [
								{
									"name": "Create ObjetivoEspecifico",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c7228ce-cfcf-4a0e-b11a-ba638bffa85d",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"",
													"var objetivo_especifico = responseJSON || {};",
													"",
													"tests['ObjetivoEspecifico has \"_id\" property'] = objetivo_especifico.hasOwnProperty('_id');",
													"tests['ObjetivoEspecifico has \"codigo\" property'] = objetivo_especifico.hasOwnProperty('codigo');",
													"tests['ObjetivoEspecifico has \"descripcion\" property'] = objetivo_especifico.hasOwnProperty('descripcion');",
													"tests['ObjetivoEspecifico has \"general\" property'] = objetivo_especifico.hasOwnProperty('general');",
													"tests['ObjetivoEspecifico has \"hipotesis\" property'] = objetivo_especifico.hasOwnProperty('hipotesis');",
													"tests['ObjetivoEspecifico has \"indicadores\" property'] = objetivo_especifico.hasOwnProperty('indicadores');",
													"tests['ObjetivoEspecifico has \"resultados\" property'] = objetivo_especifico.hasOwnProperty('resultados');",
													"if(tests['ObjetivoEspecifico has \"_id\" property']){",
													"    postman.setEnvironmentVariable('objetivo_especifico_id', objetivo_especifico._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\t\n\t\t\t\"codigo\": \"OE1\",\n\t\t\t\"descripcion\":\"Descripción OE1\",\n\t\t\t\"general\": false,\n\t\t\t\"indicadores\":null,\n\t\t\t\"hipotesis\":null,\n\t\t\t\"resultados\":null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update ObjetivoEspecifico",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6d6da12-5ee6-42c9-ba86-708351892de9",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    ",
													"    var objetivo_especifico = responseJSON || {};",
													"    ",
													"    tests['ObjetivoEspecifico has \"_id\" property'] = objetivo_especifico.hasOwnProperty('_id');",
													"    tests['ObjetivoEspecifico has \"codigo\" property'] = objetivo_especifico.hasOwnProperty('codigo');",
													"    tests['ObjetivoEspecifico has \"descripcion\" property'] = objetivo_especifico.hasOwnProperty('descripcion');",
													"    tests['ObjetivoEspecifico has \"general\" property'] = objetivo_especifico.hasOwnProperty('general');",
													"    tests['ObjetivoEspecifico has \"hipotesis\" property'] = objetivo_especifico.hasOwnProperty('hipotesis');",
													"    tests['ObjetivoEspecifico has \"indicadores\" property'] = objetivo_especifico.hasOwnProperty('indicadores');",
													"    tests['ObjetivoEspecifico has \"resultados\" property'] = objetivo_especifico.hasOwnProperty('resultados');",
													"    ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\t\n\t\t\t\"codigo\": \"OE1 MOD\",\n\t\t\t\"descripcion\":\"Descripción OE1 MOD\",\n\t\t\t\"general\": false,\n\t\t\t\"indicadores\":null,\n\t\t\t\"hipotesis\":null,\n\t\t\"resultados\":null\n\t\t\n}\n"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get ObjetivoEspecifico",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fb86f9-f845-4bbd-8ff1-2614e6f1dbec",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"",
													"var objetivo_especifico = responseJSON || {};",
													"",
													"tests['ObjetivoEspecifico has \"_id\" property'] = objetivo_especifico.hasOwnProperty('_id');",
													"tests['ObjetivoEspecifico has \"codigo\" property'] = objetivo_especifico.hasOwnProperty('codigo');",
													"tests['ObjetivoEspecifico has \"descripcion\" property'] = objetivo_especifico.hasOwnProperty('descripcion');",
													"tests['ObjetivoEspecifico has \"general\" property'] = objetivo_especifico.hasOwnProperty('general');",
													"tests['ObjetivoEspecifico has \"hipotesis\" property'] = objetivo_especifico.hasOwnProperty('hipotesis');",
													"tests['ObjetivoEspecifico has \"indicadores\" property'] = objetivo_especifico.hasOwnProperty('indicadores');",
													"tests['ObjetivoEspecifico has \"resultados\" property'] = objetivo_especifico.hasOwnProperty('resultados');",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All ObjetivosEspecificos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9aea3b58-c794-464a-af7f-91db571e173f",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    if(responseJSON.length > 0){",
													"        var objetivo_especifico = responseJSON[0];",
													"",
													"        tests['ObjetivoEspecifico has \"_id\" property'] = objetivo_especifico.hasOwnProperty('_id');",
													"        tests['ObjetivoEspecifico has \"codigo\" property'] = objetivo_especifico.hasOwnProperty('codigo');",
													"        tests['ObjetivoEspecifico has \"descripcion\" property'] = objetivo_especifico.hasOwnProperty('descripcion');",
													"        tests['ObjetivoEspecifico has \"general\" property'] = objetivo_especifico.hasOwnProperty('general');",
													"        tests['ObjetivoEspecifico has \"hipotesis\" property'] = objetivo_especifico.hasOwnProperty('hipotesis');",
													"        tests['ObjetivoEspecifico has \"indicadores\" property'] = objetivo_especifico.hasOwnProperty('indicadores');",
													"        tests['ObjetivoEspecifico has \"resultados\" property'] = objetivo_especifico.hasOwnProperty('resultados');",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains objetivos_especificos'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Hipotesis",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Create Hipotesis",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2589d4f6-69d5-44df-8dde-82b9b26dfef9",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var hipotesis = responseJSON || {};",
													"",
													"tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
													"tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
													"if(tests['Hipotesis has \"_id\" property']){",
													"    postman.setEnvironmentVariable('hipotesis_id', hipotesis._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\"descripcion\": \"Hipotesis de OE\"\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/hipotesis",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}",
												"hipotesis"
											]
										},
										"description": "Create Hipotesis"
									},
									"response": []
								},
								{
									"name": "Update Hipotesis",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16f39db2-fab0-4052-8bcf-f4ec5e23675d",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    var hipotesis = responseJSON || {};",
													"    ",
													"    tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
													"    tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    \n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/hipotesis/{{hipotesis_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}",
												"hipotesis",
												"{{hipotesis_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All Hipotesis",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aaa2830b-72ea-4130-9f61-2e29ac55462b",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    if(responseJSON.length > 0){",
													"        var h = responseJSON[0];",
													"",
													"        tests['Hipotesis has \"_id\" property'] = h.hasOwnProperty('_id');",
													"        tests['Hipotesis has \"descripcion\" property'] = h.hasOwnProperty('descripcion');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains hipotesis'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/hipotesis",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}",
												"hipotesis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Hipotesis",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdf299a7-aff2-4967-91a3-1d7569ac3c2a",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var hipotesis = responseJSON || {};",
													"",
													"tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
													"tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
													"       ",
													"   ",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/hipotesis/{{hipotesis_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"objetivo_especifico",
												"{{objetivo_especifico_id}}",
												"hipotesis",
												"{{hipotesis_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Resultados",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Init",
									"description": null,
									"item": [
										{
											"name": "Create Resultado",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "100faf5b-2f78-42e1-99e5-6b92696c4548",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var resultado = responseJSON || {};",
															"",
															"tests['Resultado has \"_id\" property'] = resultado.hasOwnProperty('_id');",
															"tests['Resultado has \"codigo\" property'] = resultado.hasOwnProperty('codigo');",
															"tests['Resultado has \"descripcion\" property'] = resultado.hasOwnProperty('descripcion');",
															"tests['Resultado has \"coste_total\" property'] = resultado.hasOwnProperty('coste_total');",
															"tests['Resultado has \"duracion\" property'] = resultado.hasOwnProperty('duracion');",
															"tests['Resultado has \"hipotesis\" property'] = resultado.hasOwnProperty('hipotesis');",
															"tests['Resultado has \"actividades\" property'] = resultado.hasOwnProperty('actividades');",
															"tests['Resultado has \"indicadores\" property'] = resultado.hasOwnProperty('indicadores');",
															"if(tests['Resultado has \"_id\" property']){",
															"    postman.setEnvironmentVariable('resultado_id', resultado._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"R1 de OE\",\n\t\t\"descripcion\": \"Descripcion de R1 de OE\",\n\t\t\"coste_total\": 1000,\n\t\t\"duracion\": 1,\n\t\t\"hipotesis\":null,\n\t\t\"actividades\":null,\n\t\t\"indicadores\":null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Resultado",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6da7dde1-b588-4cca-8725-7d19cb4ff10b",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"    ",
															"    var resultado = responseJSON || {};",
															"    ",
															"    tests['Resultado has \"_id\" property'] = resultado.hasOwnProperty('_id');",
															"    tests['Resultado has \"codigo\" property'] = resultado.hasOwnProperty('codigo');",
															"    tests['Resultado has \"descripcion\" property'] = resultado.hasOwnProperty('descripcion');",
															"    tests['Resultado has \"coste_total\" property'] = resultado.hasOwnProperty('coste_total');",
															"    tests['Resultado has \"duracion\" property'] = resultado.hasOwnProperty('duracion');",
															"    tests['Resultado has \"hipotesis\" property'] = resultado.hasOwnProperty('hipotesis');",
															"    tests['Resultado has \"actividades\" property'] = resultado.hasOwnProperty('actividades');",
															"    tests['Resultado has \"indicadores\" property'] = resultado.hasOwnProperty('indicadores');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"R1 de OE MOD\",\n\t\t\"descripcion\": \"Descripcion de R1 de OE MOD\",\n\t\t\"coste_total\": 4000,\n\t\t\"duracion\": 4,\n\t\t\"hipotesis\":null,\n\t\t\"actividades\":null,\n\t\t\"indicadores\":null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All Resultados",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f0d1937-441a-4eb8-8f82-917762094044",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    if(responseJSON.length > 0){",
															"        var resultado = responseJSON[0];",
															"",
															"        tests['Resultado has \"_id\" property'] = resultado.hasOwnProperty('_id');",
															"        tests['Resultado has \"codigo\" property'] = resultado.hasOwnProperty('codigo');",
															"        tests['Resultado has \"descripcion\" property'] = resultado.hasOwnProperty('descripcion');",
															"        tests['Resultado has \"coste_total\" property'] = resultado.hasOwnProperty('coste_total');",
															"        tests['Resultado has \"duracion\" property'] = resultado.hasOwnProperty('duracion');",
															"        tests['Resultado has \"hipotesis\" property'] = resultado.hasOwnProperty('hipotesis');",
															"        tests['Resultado has \"actividades\" property'] = resultado.hasOwnProperty('actividades');",
															"        tests['Resultado has \"indicadores\" property'] = resultado.hasOwnProperty('indicadores');",
															"",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains resultados'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Resultado",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97f74683-2103-4528-b380-0bee1750f883",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var resultado = responseJSON || {};",
															"",
															"tests['Resultado has \"_id\" property'] = resultado.hasOwnProperty('_id');",
															"tests['Resultado has \"codigo\" property'] = resultado.hasOwnProperty('codigo');",
															"tests['Resultado has \"descripcion\" property'] = resultado.hasOwnProperty('descripcion');",
															"tests['Resultado has \"coste_total\" property'] = resultado.hasOwnProperty('coste_total');",
															"tests['Resultado has \"duracion\" property'] = resultado.hasOwnProperty('duracion');",
															"tests['Resultado has \"hipotesis\" property'] = resultado.hasOwnProperty('hipotesis');",
															"tests['Resultado has \"actividades\" property'] = resultado.hasOwnProperty('actividades');",
															"tests['Resultado has \"indicadores\" property'] = resultado.hasOwnProperty('indicadores');",
															"",
															"",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Actividades",
									"description": null,
									"item": [
										{
											"name": "Init",
											"description": null,
											"item": [
												{
													"name": "Create Actividad",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2eb87142-2108-4486-a06b-ae9a51fb9eb0",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var actividad = responseJSON || {};",
																	"",
																	"tests['Actividad has \"_id\" property'] = actividad.hasOwnProperty('_id');",
																	"tests['Actividad has \"codigo\" property'] = actividad.hasOwnProperty('codigo');",
																	"tests['Actividad has \"descripcion\" property'] = actividad.hasOwnProperty('descripcion');",
																	"tests['Actividad has \"comentarios\" property'] = actividad.hasOwnProperty('comentarios');",
																	"tests['Actividad has \"comentarios_ong\" property'] = actividad.hasOwnProperty('comentarios_ong');",
																	"tests['Actividad has \"comentarios_aecid\" property'] = actividad.hasOwnProperty('comentarios_aecid');",
																	"tests['Actividad has \"comentarios_costes_personal\" property'] = actividad.hasOwnProperty('comentarios_costes_personal');",
																	"tests['Actividad has \"global\" property'] = actividad.hasOwnProperty('global');",
																	"tests['Actividad has \"recurso\" property'] = actividad.hasOwnProperty('recurso');",
																	"tests['Actividad has \"progreso\" property'] = actividad.hasOwnProperty('progreso');",
																	"tests['Actividad has \"planificacion_actividad\" property'] = actividad.hasOwnProperty('planificacion_actividad');",
																	"tests['Actividad has \"ejecucion_actividad\" property'] = actividad.hasOwnProperty('ejecucion_actividad');",
																	"if(tests['Actividad has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('actividad_id', actividad._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": false,\n\t\t\"progreso\":null,\n\t\t\"planificacion_actividad\": null,\n\t\t\"ejecucion_actividad\": null\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividades",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividades"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Actividad",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1ac70eab-0abd-471d-a3b5-31206c5a76e1",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"    ",
																	"    var actividad = responseJSON || {};",
																	"",
																	"    tests['Actividad has \"_id\" property'] = actividad.hasOwnProperty('_id');",
																	"    tests['Actividad has \"codigo\" property'] = actividad.hasOwnProperty('codigo');",
																	"    tests['Actividad has \"descripcion\" property'] = actividad.hasOwnProperty('descripcion');",
																	"    tests['Actividad has \"comentarios\" property'] = actividad.hasOwnProperty('comentarios');",
																	"    tests['Actividad has \"comentarios_ong\" property'] = actividad.hasOwnProperty('comentarios_ong');",
																	"    tests['Actividad has \"comentarios_aecid\" property'] = actividad.hasOwnProperty('comentarios_aecid');",
																	"    tests['Actividad has \"comentarios_costes_personal\" property'] = actividad.hasOwnProperty('comentarios_costes_personal');",
																	"    tests['Actividad has \"global\" property'] = actividad.hasOwnProperty('global');",
																	"    tests['Actividad has \"recurso\" property'] = actividad.hasOwnProperty('recurso');",
																	"    tests['Actividad has \"progreso\" property'] = actividad.hasOwnProperty('progreso');",
																	"    tests['Actividad has \"planificacion_actividad\" property'] = actividad.hasOwnProperty('planificacion_actividad');",
																	"    tests['Actividad has \"ejecucion_actividad\" property'] = actividad.hasOwnProperty('ejecucion_actividad');",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global Mod\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global Mod\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": false,\n\t\t\"progreso\":null,\n\t\t\"planificacion_actividad\": null,\n\t\t\"ejecucion_actividad\": null\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividades/{{actividad_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividades",
																"{{actividad_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "All Actividades",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "ef774e53-e4cd-4854-bbd6-a6c7a20e8fa7",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    if(responseJSON && responseJSON.length > 0){",
																	"        var actividad = responseJSON[0] || {};",
																	"",
																	"        tests['Actividad has \"_id\" property'] = actividad.hasOwnProperty('_id');",
																	"        tests['Actividad has \"codigo\" property'] = actividad.hasOwnProperty('codigo');",
																	"        tests['Actividad has \"descripcion\" property'] = actividad.hasOwnProperty('descripcion');",
																	"        tests['Actividad has \"comentarios\" property'] = actividad.hasOwnProperty('comentarios');",
																	"        tests['Actividad has \"comentarios_ong\" property'] = actividad.hasOwnProperty('comentarios_ong');",
																	"        tests['Actividad has \"comentarios_aecid\" property'] = actividad.hasOwnProperty('comentarios_aecid');",
																	"        tests['Actividad has \"comentarios_costes_personal\" property'] = actividad.hasOwnProperty('comentarios_costes_personal');",
																	"        tests['Actividad has \"global\" property'] = actividad.hasOwnProperty('global');",
																	"        tests['Actividad has \"recurso\" property'] = actividad.hasOwnProperty('recurso');",
																	"        tests['Actividad has \"progreso\" property'] = actividad.hasOwnProperty('progreso');",
																	"        tests['Actividad has \"planificacion_actividad\" property'] = actividad.hasOwnProperty('planificacion_actividad');",
																	"        tests['Actividad has \"ejecucion_actividad\" property'] = actividad.hasOwnProperty('ejecucion_actividad');",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains actividades'] = false;",
																	"    }",
																	"}",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"actividad_global\": {\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global Mod\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global Mod\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": true\n\t}\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividades",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividades"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Actividad",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4f6ccde3-6d1a-4af7-b998-8d0d824498cc",
																"type": "text/javascript",
																"exec": [
																	"    var responseJSON = JSON.parse(responseBody);",
																	"   ",
																	"    var actividad = responseJSON || {};",
																	"",
																	"    tests['Actividad has \"_id\" property'] = actividad.hasOwnProperty('_id');",
																	"    tests['Actividad has \"codigo\" property'] = actividad.hasOwnProperty('codigo');",
																	"    tests['Actividad has \"descripcion\" property'] = actividad.hasOwnProperty('descripcion');",
																	"    tests['Actividad has \"comentarios\" property'] = actividad.hasOwnProperty('comentarios');",
																	"    tests['Actividad has \"comentarios_ong\" property'] = actividad.hasOwnProperty('comentarios_ong');",
																	"    tests['Actividad has \"comentarios_aecid\" property'] = actividad.hasOwnProperty('comentarios_aecid');",
																	"    tests['Actividad has \"comentarios_costes_personal\" property'] = actividad.hasOwnProperty('comentarios_costes_personal');",
																	"    tests['Actividad has \"global\" property'] = actividad.hasOwnProperty('global');",
																	"    tests['Actividad has \"recurso\" property'] = actividad.hasOwnProperty('recurso');",
																	"    tests['Actividad has \"progreso\" property'] = actividad.hasOwnProperty('progreso');",
																	"    tests['Actividad has \"planificacion_actividad\" property'] = actividad.hasOwnProperty('planificacion_actividad');",
																	"    tests['Actividad has \"ejecucion_actividad\" property'] = actividad.hasOwnProperty('ejecucion_actividad');"
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"actividad_global\": {\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global Mod\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global Mod\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": true\n\t}\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividades/{{actividad_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividades",
																"{{actividad_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Progreso",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "36dde1af-560f-4d71-a02e-d7e5840ac884",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var progreso = responseJSON || {};",
																	"",
																	"tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"if(tests['Progreso has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('ra_progreso_id', progreso._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\t\"fecha\": \"01/01/2018\",\n\t\t\"porcentaje\": 13\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/progreso",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"progreso"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3823a9c6-5078-4b0e-8028-a87092746596",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"   ",
																	"    var progreso = responseJSON || {};",
																	"    ",
																	"    tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"    tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"    tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"fecha\": \"01/02/2018\",\n\t\t\"porcentaje\": 78\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/progreso/{{ra_progreso_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"progreso",
																"{{ra_progreso_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8638d61b-f783-4a26-878f-c12cc016fe64",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    if(responseJSON){",
																	"        var progreso = responseJSON;",
																	"",
																	"        tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"        tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"        tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"      ",
																	"       ",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains progreso'] = false;",
																	"    }",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/progreso",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"progreso"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Recursos",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create Recurso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "9c58032a-1636-416b-b80a-334956345e3b",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var recurso = responseJSON || {};",
																	"",
																	"tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
																	"tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
																	"tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
																	"if(tests['Recurso has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('ra_recurso_id', recurso._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"descripcion\": \"Recurso 1\",\n\t\t\"coste\": 1300\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/recursos",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"recursos"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Recurso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "a881cc5d-4eaf-4f8f-85c8-786195db2703",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    var recurso = responseJSON || {};",
																	"    ",
																	"    tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
																	"    tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
																	"    tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
																	"",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"descripcion\": \"Recurso 1 MOD\",\n\t\t\"coste\": 1000\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/recursos/{{ra_recurso_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"recursos",
																"{{ra_recurso_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "All Recursos",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "31a9a844-55b5-4a91-a1ab-be09ddf62ba3",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"    ",
																	"    if(responseJSON.length > 0){",
																	"        var recurso = responseJSON[0];",
																	"",
																	"        tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
																	"        tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
																	"        tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
																	"      ",
																	"       ",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains recursos'] = false;",
																	"    }",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/recursos",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"recursos"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Recurso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "7b130fe0-3fbb-4101-8601-037d04f3f029",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var recurso = responseJSON || {};",
																	"",
																	"tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
																	"tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
																	"tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
																	"",
																	"   ",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/recursos/{{ra_recurso_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"recursos",
																"{{ra_recurso_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Planificacion",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create Planificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c4882a2d-f6c0-4226-ac4b-6bf88fa3f987",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"",
																	"var planificacion_actividad = responseJSON || {};",
																	"",
																	"tests['PlanificacionActividad has \"_id\" property'] = planificacion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_fin');",
																	"if(tests['PlanificacionActividad has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('planificacion_actividad_id', planificacion_actividad._id);",
																	"}",
																	"\t\t\t\t\t\t\t\t\t"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\t\n\t\t\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\t\t\"fecha_fin\":  \"12/01/2018\"   \n\t\t\t\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/planificacion_actividad",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"planificacion_actividad"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Planificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "dd128395-a47c-4ca9-a47b-ef943ef270fe",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    var planificacion_actividad = responseJSON || {};",
																	"    ",
																	"   tests['PlanificacionActividad has \"_id\" property'] = planificacion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_fin');",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\t\n\t\t\t\t\"fecha_inicio\": \"01/02/2018\",\n\t\t\t\t\"fecha_fin\":  \"12/03/2018\"   \n\t\t\t\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/planificacion_actividad/{{planificacion_actividad_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"planificacion_actividad",
																"{{planificacion_actividad_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Planificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "d236e853-fd88-44f5-9b15-cdfe94d0d425",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var planificacion_actividad = responseJSON || {};",
																	"",
																	"tests['PlanificacionActividad has \"_id\" property'] = planificacion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['PlanificacionActividad has \"fecha_inicio\" property'] = planificacion_actividad.hasOwnProperty('fecha_fin');",
																	"",
																	"   ",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/planificacion_actividad",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"planificacion_actividad"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Ejecucion",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create Ejecucion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "bc8eac81-0c09-4163-b616-4d037d17d6bb",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var ejecucion_actividad = responseJSON || {};",
																	"",
																	"tests['EjecucionActividad has \"_id\" property'] = ejecucion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_fin');",
																	"if(tests['EjecucionActividad has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('ejecucion_actividad_id', ejecucion_actividad._id);",
																	"}",
																	"\t\t\t\t\t\t\t\t\t"
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\t\n\t\t\t\t\"fecha_inicio\": \"01/2/2018\",\n\t\t\t\t\"fecha_fin\":  \"12/02/2018\"   \n\t\t\t\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/ejecucion_actividad",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"ejecucion_actividad"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Ejecucion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "bd1ade21-7166-4b93-94f7-f9148e8c532b",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"    ",
																	"    var ejecucion_actividad = responseJSON || {};",
																	"",
																	"tests['EjecucionActividad has \"_id\" property'] = ejecucion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_fin');",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\t\t\n\t\t\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\t\t\"fecha_fin\":  \"12/01/2018\"   \n\t\t\t\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/ejecucion_actividad/{{ejecucion_actividad_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"ejecucion_actividad",
																"{{ejecucion_actividad_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Ejecucion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "21789453-12f8-477f-8d5d-394882e7a53b",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var ejecucion_actividad = responseJSON || {};",
																	"",
																	"",
																	"tests['EjecucionActividad has \"_id\" property'] = ejecucion_actividad.hasOwnProperty('_id');",
																	"",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_inicio');",
																	"tests['EjecucionActividad has \"fecha_inicio\" property'] = ejecucion_actividad.hasOwnProperty('fecha_fin');",
																	"",
																	"   ",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/ejecucion_actividad",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"actividad",
																"{{actividad_id}}",
																"ejecucion_actividad"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Hipotesis",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create Hipotesis",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76ecad7d-fd7c-4fb2-96a7-19dd3be76f9b",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var hipotesis = responseJSON || {};",
															"",
															"tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
															"tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
															"if(tests['Hipotesis has \"_id\" property']){",
															"    postman.setEnvironmentVariable('r_hipotesis_id', hipotesis._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"descripcion\": \"Hipotesis de OE\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/hipotesis",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}",
														"hipotesis"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Hipotesis",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ac6b273-7010-41eb-a9e6-da67fa7edf0d",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"   ",
															"    var hipotesis = responseJSON || {};",
															"    ",
															"    tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
															"    tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    \n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/hipotesis/{{r_hipotesis_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}",
														"hipotesis",
														"{{r_hipotesis_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All Hipotesis",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "12a714f7-f740-4ce0-b1d0-3237f9881309",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"   ",
															"    if(responseJSON.length > 0){",
															"        var h = responseJSON[0];",
															"",
															"        tests['Hipotesis has \"_id\" property'] = h.hasOwnProperty('_id');",
															"        tests['Hipotesis has \"descripcion\" property'] = h.hasOwnProperty('descripcion');",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains hipotesis'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/hipotesis",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}",
														"hipotesis"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Hipotesis",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19463a74-c57e-4058-beba-4a45a6008dc8",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var hipotesis = responseJSON || {};",
															"",
															"tests['Hipotesis has \"_id\" property'] = hipotesis.hasOwnProperty('_id');",
															"tests['Hipotesis has \"descripcion\" property'] = hipotesis.hasOwnProperty('descripcion');",
															"       ",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/hipotesis/{{r_hipotesis_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"resultado",
														"{{resultado_id}}",
														"hipotesis",
														"{{r_hipotesis_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Indicadores",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Init",
											"description": null,
											"item": [
												{
													"name": "Create Indicador",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "a0c8f0d3-7f33-4668-acc4-e692357eefe6",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var indicador = responseJSON || {};",
																	"",
																	"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
																	"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
																	"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
																	"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
																	"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
																	"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
																	"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
																	"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
																	"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
																	"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
																	"if(tests['Indicador has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('r_indicador_id', indicador._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1\",\n\t\t\"linea_base\": \"100\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Indicador",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "759227e0-b1d2-462b-9224-72aafcece42d",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"   ",
																	"    var indicador = responseJSON || {};",
																	"    ",
																	"    tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
																	"    tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
																	"    tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
																	"    tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
																	"    tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
																	"    tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
																	"    tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
																	"    tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
																	"    tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
																	"    tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
																	"",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1 MOD\",\n\t\t\"linea_base\": \"120\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"comentario ong en MOD\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "All Indicadores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3388a220-f62e-4231-b9fb-9bca8a5a43ec",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    if(responseJSON.length > 0){",
																	"        var indicador = responseJSON[0];",
																	"",
																	"        tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
																	"        tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
																	"        tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
																	"        tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
																	"        tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
																	"        tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
																	"        tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
																	"        tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
																	"        tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
																	"        tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
																	"       ",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains indicadores'] = false;",
																	"    }",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Indicador",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f43b8c58-a238-46dc-a78e-d70857751236",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var indicador = responseJSON || {};",
																	"",
																	"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
																	"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
																	"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
																	"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
																	"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
																	"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
																	"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
																	"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
																	"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
																	"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
																	"   ",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Progreso",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "0f5264cc-fea1-43ed-8e97-cec85eae110c",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var progreso = responseJSON || {};",
																	"",
																	"tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"if(tests['Progreso has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('ri_progreso_id', progreso._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"fecha\": \"01/01/2018\",\n\t\t\"porcentaje\": 13\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/progreso",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"progreso"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5bc10a39-5e6d-4cc4-8320-e3027b00deec",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"   ",
																	"    var progreso = responseJSON || {};",
																	"    ",
																	"    tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"    tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"    tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\t\"fecha\": \"01/02/2018\",\n\t\t\"porcentaje\": 78\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/progreso/{{ri_progreso_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"progreso",
																"{{ri_progreso_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get Progreso",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b27dfb60-cc9c-4607-9ef2-3203e1e4c0e6",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"   ",
																	"    ",
																	"    if(responseJSON){",
																	"        var progreso = responseJSON;",
																	"",
																	"        tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
																	"        tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
																	"        tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
																	"      ",
																	"       ",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains progreso'] = false;",
																	"    }",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/progreso",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"progreso"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "FuentesVerificacion",
											"description": "TEST Hipotesis",
											"item": [
												{
													"name": "Create FuenteVerificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1b6584cd-ea74-4f2b-8c29-2911c2d138fd",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var fuente_verificacion = responseJSON || {};",
																	"",
																	"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
																	"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
																	"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
																	"if(tests['FuenteVerificacion has \"_id\" property']){",
																	"    postman.setEnvironmentVariable('r_fuente_verificacion_id', fuente_verificacion._id);",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1\"\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/fuentes_verificacion",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"fuentes_verificacion"
															]
														},
														"description": "Create Hipotesis"
													},
													"response": []
												},
												{
													"name": "Update FuenteVerificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "cbdef732-9d76-476a-a6ad-c5938ccec617",
																"type": "text/javascript",
																"exec": [
																	"if (!(environment.isIntegrationTest)) {",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    var fuente_verificacion = responseJSON || {};",
																	"    ",
																	"    tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
																	"    tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
																	"    tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
																	"",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1 MOD\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1 MOD\"\n\t\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/fuentes_verificacion/{{r_fuente_verificacion_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"fuentes_verificacion",
																"{{r_fuente_verificacion_id}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "All FuentesVerificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "601d6ecf-6bc4-4394-b929-0f8646e87aab",
																"type": "text/javascript",
																"exec": [
																	"var is200Response = responseCode.code === 200;",
																	"",
																	"tests['Response code is 200 OK'] = is200Response;",
																	"",
																	"if(is200Response){",
																	"    var responseJSON = JSON.parse(responseBody);",
																	"",
																	"    if(responseJSON.length > 0){",
																	"        var fuente_verificacion = responseJSON[0];",
																	"",
																	"        tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
																	"        tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
																	"        tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
																	"      ",
																	"       ",
																	"    }",
																	"    else",
																	"    {",
																	"        tests['Response contains fuentes_verificacion'] = false;",
																	"    }",
																	"}",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/fuentes_verificacion",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"fuentes_verificacion"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get FuenteVerificacion",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c831e111-222d-45a0-9dbf-bb9fadf40f79",
																"type": "text/javascript",
																"exec": [
																	"var responseJSON = JSON.parse(responseBody);",
																	"",
																	"var fuente_verificacion = responseJSON || {};",
																	"",
																	"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
																	"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
																	"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
																	"",
																	"   ",
																	"",
																	""
																]
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "X-Requested-With",
																"value": "XMLHttpRequest"
															},
															{
																"key": "Authorization",
																"value": "Token {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
														},
														"url": {
															"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/fuentes_verificacion/{{r_fuente_verificacion_id}}",
															"host": [
																"{{apiUrl}}"
															],
															"path": [
																"proyecto",
																"{{proyecto_id}}",
																"objetivo_especifico",
																"{{objetivo_especifico_id}}",
																"resultado",
																"{{resultado_id}}",
																"indicador",
																"{{r_indicador_id}}",
																"fuentes_verificacion",
																"{{r_fuente_verificacion_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Indicadores",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Init",
									"description": null,
									"item": [
										{
											"name": "Create Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fdc8377-6b93-4d2f-8201-cd31eefb2a90",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var indicador = responseJSON || {};",
															"",
															"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"if(tests['Indicador has \"_id\" property']){",
															"    postman.setEnvironmentVariable('indicador_id', indicador._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1\",\n\t\t\"linea_base\": \"100\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc1be44e-e053-4d73-b032-f9c99c3809b5",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"   ",
															"    var indicador = responseJSON || {};",
															"    ",
															"    tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"    tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"    tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"    tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"    tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"    tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"    tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"    tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"    tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"    tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Indicador 1\",\n\t\t\"descripcion\": \"Descripcion de Indicador 1 MOD\",\n\t\t\"linea_base\": \"120\",\n\t\t\"meta\": \"200\",\n\t\t\"comentarios\": \"comentario prueba\",\n\t\t\"comentarios_ong\": \"comentario ong en MOD\",\n\t\t\"comentarios_aecid\": \"\",\n\t\t\"progreso\": null,\n\t\t\"fuente_verificacion\": null\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Indicador",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae068f72-d8ca-4688-a373-88f19f4ca91e",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var indicador = responseJSON || {};",
															"",
															"tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All Indicadores",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5995706-603c-4e29-8bc1-2adc2030bcc9",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"    ",
															"    if(responseJSON.length > 0){",
															"        var indicador = responseJSON[0];",
															"",
															"        tests['Indicador has \"_id\" property'] = indicador.hasOwnProperty('_id');",
															"        tests['Indicador has \"codigo\" property'] = indicador.hasOwnProperty('codigo');",
															"        tests['Indicador has \"descripcion\" property'] = indicador.hasOwnProperty('descripcion');",
															"        tests['Indicador has \"linea_base\" property'] = indicador.hasOwnProperty('linea_base');",
															"        tests['Indicador has \"meta\" property'] = indicador.hasOwnProperty('meta');",
															"        tests['Indicador has \"comentarios\" property'] = indicador.hasOwnProperty('comentarios');",
															"        tests['Indicador has \"comentarios_ong\" property'] = indicador.hasOwnProperty('comentarios_ong');",
															"        tests['Indicador has \"comentarios_aecid\" property'] = indicador.hasOwnProperty('comentarios_aecid');",
															"        tests['Indicador has \"progreso\" property'] = indicador.hasOwnProperty('progreso');",
															"        tests['Indicador has \"fuente_verificacion\" property'] = indicador.hasOwnProperty('fuente_verificacion');",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains indicadores'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "FuentesVerificacion",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "697eb682-2d1c-4291-9019-51f1b492c92b",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var fuente_verificacion = responseJSON || {};",
															"",
															"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"if(tests['FuenteVerificacion has \"_id\" property']){",
															"    postman.setEnvironmentVariable('fuente_verificacion_id', fuente_verificacion._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/fuentes_verificacion",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"fuentes_verificacion"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab3cbde3-8149-4e09-ad32-42e6332b4138",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															" ",
															"    var fuente_verificacion = responseJSON || {};",
															"    ",
															"    tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"    tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"    tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"codigo\": \"Fuente Verificacion 1 MOD\",\n\t\t\"descripcion\": \"Descripcion de la Fuente Verificacion 1 MOD\"\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/fuentes_verificacion/{{fuente_verificacion_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"fuentes_verificacion",
														"{{fuente_verificacion_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "All FuentesVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f3d4279-3850-4489-9e08-a6e6beeb752d",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"   ",
															"    if(responseJSON.length > 0){",
															"        var fuente_verificacion = responseJSON[0];",
															"",
															"        tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"        tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"        tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"      ",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains fuentes_verificacion'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/fuentes_verificacion",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"fuentes_verificacion"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get FuenteVerificacion",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6535969f-61f7-48f6-96e6-e769a597cfef",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var fuente_verificacion = responseJSON || {};",
															"",
															"tests['FuenteVerificacion has \"_id\" property'] = fuente_verificacion.hasOwnProperty('_id');",
															"tests['FuenteVerificacion has \"codigo\" property'] = fuente_verificacion.hasOwnProperty('codigo');",
															"tests['FuenteVerificacion has \"descripcion\" property'] = fuente_verificacion.hasOwnProperty('descripcion');",
															"",
															"   ",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/fuentes_verificacion/{{fuente_verificacion_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"fuentes_verificacion",
														"{{fuente_verificacion_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Progreso",
									"description": "TEST Hipotesis",
									"item": [
										{
											"name": "Create Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f80cb8ab-c110-4d41-8141-69d7e689eb15",
														"type": "text/javascript",
														"exec": [
															"var responseJSON = JSON.parse(responseBody);",
															"",
															"var progreso = responseJSON || {};",
															"",
															"tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"if(tests['Progreso has \"_id\" property']){",
															"    postman.setEnvironmentVariable('progreso_id', progreso._id);",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"fecha\": \"01/01/2018\",\n\t\t\"porcentaje\": 13\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/progreso",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"progreso"
													]
												},
												"description": "Create Hipotesis"
											},
											"response": []
										},
										{
											"name": "Update Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "442a6149-52ff-4f18-8ec1-84d20f7f2901",
														"type": "text/javascript",
														"exec": [
															"if (!(environment.isIntegrationTest)) {",
															"    var responseJSON = JSON.parse(responseBody);",
															"  ",
															"    var progreso = responseJSON || {};",
															"    ",
															"    tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"    tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"    tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": " {\n\t\t\"fecha\": \"01/02/2018\",\n\t\t\"porcentaje\": 78\n\t\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/progreso/{{progreso_id}}",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"progreso",
														"{{progreso_id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Progreso",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef9695d6-8735-45af-9e70-4e6ceb3f79ea",
														"type": "text/javascript",
														"exec": [
															"var is200Response = responseCode.code === 200;",
															"",
															"tests['Response code is 200 OK'] = is200Response;",
															"",
															"if(is200Response){",
															"    var responseJSON = JSON.parse(responseBody);",
															"",
															"    if(responseJSON){",
															"        var progreso = responseJSON;",
															"",
															"        tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
															"        tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
															"        tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
															"      ",
															"       ",
															"    }",
															"    else",
															"    {",
															"        tests['Response contains progreso'] = false;",
															"    }",
															"}",
															""
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "X-Requested-With",
														"value": "XMLHttpRequest"
													},
													{
														"key": "Authorization",
														"value": "Token {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
												},
												"url": {
													"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/progreso",
													"host": [
														"{{apiUrl}}"
													],
													"path": [
														"proyecto",
														"{{proyecto_id}}",
														"objetivo_especifico",
														"{{objetivo_especifico_id}}",
														"indicador",
														"{{indicador_id}}",
														"progreso"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ActividadGlobal",
					"description": null,
					"item": [
						{
							"name": "Init",
							"description": null,
							"item": [
								{
									"name": "Create ActividadGlobal",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff23609d-576e-49e1-bb73-3af3172b6749",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var actividad_global = responseJSON || {};",
													"",
													"tests['ActividadGlobal has \"_id\" property'] = actividad_global.hasOwnProperty('_id');",
													"tests['ActividadGlobal has \"codigo\" property'] = actividad_global.hasOwnProperty('codigo');",
													"tests['ActividadGlobal has \"descripcion\" property'] = actividad_global.hasOwnProperty('descripcion');",
													"tests['ActividadGlobal has \"comentarios\" property'] = actividad_global.hasOwnProperty('comentarios');",
													"tests['ActividadGlobal has \"comentarios_ong\" property'] = actividad_global.hasOwnProperty('comentarios_ong');",
													"tests['ActividadGlobal has \"comentarios_aecid\" property'] = actividad_global.hasOwnProperty('comentarios_aecid');",
													"tests['ActividadGlobal has \"comentarios_costes_personal\" property'] = actividad_global.hasOwnProperty('comentarios_costes_personal');",
													"tests['ActividadGlobal has \"global\" property'] = actividad_global.hasOwnProperty('global');",
													"if(tests['ActividadGlobal has \"_id\" property']){",
													"    postman.setEnvironmentVariable('actividad_global_id', actividad_global._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": true\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update ActividadGlobal",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b241f5e-a865-466b-9c62-e4870708e033",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    var actividad_global = responseJSON || {};",
													"",
													"    tests['ActividadGlobal has \"_id\" property'] = actividad_global.hasOwnProperty('_id');",
													"    tests['ActividadGlobal has \"codigo\" property'] = actividad_global.hasOwnProperty('codigo');",
													"    tests['ActividadGlobal has \"descripcion\" property'] = actividad_global.hasOwnProperty('descripcion');",
													"    tests['ActividadGlobal has \"comentarios\" property'] = actividad_global.hasOwnProperty('comentarios');",
													"    tests['ActividadGlobal has \"comentarios_ong\" property'] = actividad_global.hasOwnProperty('comentarios_ong');",
													"    tests['ActividadGlobal has \"comentarios_aecid\" property'] = actividad_global.hasOwnProperty('comentarios_aecid');",
													"    tests['ActividadGlobal has \"comentarios_costes_personal\" property'] = actividad_global.hasOwnProperty('comentarios_costes_personal');",
													"    tests['ActividadGlobal has \"global\" property'] = actividad_global.hasOwnProperty('global');",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global Mod\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global Mod\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": true\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get ActividadGlobal",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36679741-0f23-4f10-99c3-83c047782845",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    if(responseJSON){",
													"         var actividad_global = responseJSON || {};",
													"",
													"        tests['ActividadGlobal has \"_id\" property'] = actividad_global.hasOwnProperty('_id');",
													"        tests['ActividadGlobal has \"codigo\" property'] = actividad_global.hasOwnProperty('codigo');",
													"        tests['ActividadGlobal has \"descripcion\" property'] = actividad_global.hasOwnProperty('descripcion');",
													"        tests['ActividadGlobal has \"comentarios\" property'] = actividad_global.hasOwnProperty('comentarios');",
													"        tests['ActividadGlobal has \"comentarios_ong\" property'] = actividad_global.hasOwnProperty('comentarios_ong');",
													"        tests['ActividadGlobal has \"comentarios_aecid\" property'] = actividad_global.hasOwnProperty('comentarios_aecid');",
													"        tests['ActividadGlobal has \"comentarios_costes_personal\" property'] = actividad_global.hasOwnProperty('comentarios_costes_personal');",
													"        tests['ActividadGlobal has \"global\" property'] = actividad_global.hasOwnProperty('global');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains actividad_global'] = false;",
													"    }",
													"}",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"actividad_global\": {\n\t\t\"codigo\": \"Actividad Global\",\n\t\t\"descripcion\": \"Descripción Actividad Global Mod\",\n\t\t\"recurso\": null,\n\t\t\"comentarios\":\"Comentarios Act. Global Mod\",\n\t\t\"comentarios_ong\": null,\n\t\t\"comentarios_aecid\": null,\n\t\t\"comentarios_costes_personal\": null,\n\t\t\"global\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Progreso",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Create Progreso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "940f23a6-b83e-4a33-986b-d21ecfcd45d1",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"",
													"var progreso = responseJSON || {};",
													"",
													"tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
													"tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
													"tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
													"if(tests['Progreso has \"_id\" property']){",
													"    postman.setEnvironmentVariable('ag_progreso_id', progreso._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"fecha\": \"01/01/2018\",\n\t\t\"porcentaje\": 13\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/progreso",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"progreso"
											]
										},
										"description": "Create Hipotesis"
									},
									"response": []
								},
								{
									"name": "Update Progreso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9008403a-a7a1-42f8-913a-a5d6d4d0b209",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"   ",
													"    var progreso = responseJSON || {};",
													"    ",
													"    tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
													"    tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
													"    tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"fecha\": \"01/02/2018\",\n\t\t\"porcentaje\": 78\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/progreso/{{ag_progreso_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"progreso",
												"{{ag_progreso_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Progreso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17ff1715-8c30-404b-b509-4fd1ce82f7d6",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON){",
													"        var progreso = responseJSON;",
													"",
													"        tests['Progreso has \"_id\" property'] = progreso.hasOwnProperty('_id');",
													"        tests['Progreso has \"fecha\" property'] = progreso.hasOwnProperty('fecha');",
													"        tests['Progreso has \"porcentaje\" property'] = progreso.hasOwnProperty('porcentaje');",
													"      ",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains progreso'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/progreso",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"progreso"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Recursos",
							"description": "TEST Hipotesis",
							"item": [
								{
									"name": "Create Recurso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1ff7292-17c5-4d18-96be-2829030b66be",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var recurso = responseJSON || {};",
													"",
													"tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
													"tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
													"tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
													"if(tests['Recurso has \"_id\" property']){",
													"    postman.setEnvironmentVariable('recurso_id', recurso._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"descripcion\": \"Recurso 1\",\n\t\t\"coste\": 1300\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/recurso",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"recurso"
											]
										},
										"description": "Create Hipotesis"
									},
									"response": []
								},
								{
									"name": "Update Recurso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9024a8de-4150-4788-9798-234b304dd928",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"   ",
													"    var recurso = responseJSON || {};",
													"    ",
													"    tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
													"    tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
													"    tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"descripcion\": \"Recurso 1 MOD\",\n\t\t\"coste\": 1000\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/recurso/{{recurso_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"recurso",
												"{{recurso_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All Recursos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bbeb13a8-8a0a-4ba0-ad4a-4f832ae981a9",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON.length > 0){",
													"        var recurso = responseJSON[0];",
													"",
													"        tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
													"        tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
													"        tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
													"      ",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains recursos'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/recurso",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"recurso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Recurso",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca840c0c-639f-43cf-916a-7b5523dfa077",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var recurso = responseJSON || {};",
													"",
													"tests['Recurso has \"_id\" property'] = recurso.hasOwnProperty('_id');",
													"tests['Recurso has \"descripcion\" property'] = recurso.hasOwnProperty('descripcion');",
													"tests['Recurso has \"coste\" property'] = recurso.hasOwnProperty('coste');",
													"",
													"   ",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hipotesis\": {\n        \"descripcion\": \"Hipotesis de OE MOD\"\n    }\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/recurso/{{recurso_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"actividad_global",
												"{{actividad_global_id}}",
												"recurso",
												"{{recurso_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Partida",
					"description": null,
					"item": [
						{
							"name": "Create Partida",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3cad3926-80a7-4f16-ad46-b432b1a4db4f",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var partida = responseJSON || {};",
											"",
											"tests['Partida has \"_id\" property'] = partida.hasOwnProperty('_id');",
											"tests['Partida has \"nombre\" property'] = partida.hasOwnProperty('nombre');",
											"tests['Partida has \"codigo\" property'] = partida.hasOwnProperty('codigo');",
											"tests['Partida has \"es_padre\" property'] = partida.hasOwnProperty('es_padre');",
											"if(tests['Partida has \"_id\" property']){",
											"    postman.setEnvironmentVariable('partida_id', partida._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"nombre\": \"par 11\",\n\t\t\"codigo\": \"cod-11\",\n\t\t\"partida_padre\": null,\n\t\t\"costes\": null,\n\t\t\"es_padre\": true,\n\t\t\"es_inversion\": false\n\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/partida",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"partida"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Partida",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be653c38-a8fd-401c-b505-cbeaf3807ea2",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"   var responseJSON = JSON.parse(responseBody);",
											"",
											"    var partida = responseJSON || {};",
											"    ",
											"   tests['Partida has \"_id\" property'] = partida.hasOwnProperty('_id');",
											"tests['Partida has \"nombre\" property'] = partida.hasOwnProperty('nombre');",
											"tests['Partida has \"codigo\" property'] = partida.hasOwnProperty('codigo');",
											"tests['Partida has \"es_padre\" property'] = partida.hasOwnProperty('es_padre');",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\t\n\t\t\"nombre\": \"par 1\",\n\t\t\"codigo\": \"cod-1\",\n\t\t\"partida_padre\": null,\n\t\t\"costes\": null,\n\t\t\"es_padre\": false,\n\t\t\"es_inversion\": false\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/partida/{{partida_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"partida",
										"{{partida_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Partida",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08acf4db-03b3-4ba9-9022-78a2e9e6b8e6",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON){",
											"        var partida = responseJSON[0] || {};",
											"    ",
											"        tests['Partida has \"_id\" property'] = partida.hasOwnProperty('_id');",
											"tests['Partida has \"nombre\" property'] = partida.hasOwnProperty('nombre');",
											"tests['Partida has \"codigo\" property'] = partida.hasOwnProperty('codigo');",
											"tests['Partida has \"es_padre\" property'] = partida.hasOwnProperty('es_padre');",
											"       ",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains partida'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/partida",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"partida"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Periodo",
					"description": null,
					"item": [
						{
							"name": "Create Periodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7b10b98-4506-4f8a-b0cc-96c259a6a355",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var periodo = responseJSON || {};",
											"",
											"tests['periodo has \"_id\" property'] = periodo.hasOwnProperty('_id');",
											"tests['periodo has \"nombre\" property'] = periodo.hasOwnProperty('nombre');",
											"tests['periodo has \"fecha_inicio\" property'] = periodo.hasOwnProperty('fecha_inicio');",
											"tests['periodo has \"fecha_fin\" property'] = periodo.hasOwnProperty('fecha_fin');",
											"if(tests['periodo has \"_id\" property']){",
											"    postman.setEnvironmentVariable('periodo_id', periodo._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"nombre\": \"per 1\",\n\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\"fecha_fin\": \"01/01/2018\",\n\t\t\"tipo_periodo\": \"{{tipo_periodo_id}}\"\n\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/periodo",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"periodo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Periodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03ec6b4b-ef26-450c-8346-fbdb757e3a8b",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"   var responseJSON = JSON.parse(responseBody);",
											"",
											"var periodo = responseJSON || {};",
											"",
											"tests['periodo has \"_id\" property'] = periodo.hasOwnProperty('_id');",
											"tests['periodo has \"nombre\" property'] = periodo.hasOwnProperty('nombre');",
											"tests['periodo has \"fecha_inicio\" property'] = periodo.hasOwnProperty('fecha_inicio');",
											"tests['periodo has \"fecha_fin\" property'] = periodo.hasOwnProperty('fecha_fin');",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"nombre\": \"per 2\",\n\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\"fecha_fin\": \"01/01/2018\",\n\t\t\"tipo_periodo\": \"{{tipo_periodo_id}}\"\n\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/periodo/{{periodo_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"periodo",
										"{{periodo_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Periodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "563b5f3a-f68d-422d-8925-2def33e45783",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON){",
											"var periodo = responseJSON[0] || {};",
											"",
											"tests['periodo has \"_id\" property'] = periodo.hasOwnProperty('_id');",
											"tests['periodo has \"nombre\" property'] = periodo.hasOwnProperty('nombre');",
											"tests['periodo has \"fecha_inicio\" property'] = periodo.hasOwnProperty('fecha_inicio');",
											"tests['periodo has \"fecha_fin\" property'] = periodo.hasOwnProperty('fecha_fin');",
											"       ",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains informe'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/periodo",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"periodo"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Importe",
					"description": null,
					"item": [
						{
							"name": "Importe",
							"description": null,
							"item": [
								{
									"name": "Create Importe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "28796904-e3d5-40e0-89d5-6d5c0d354d59",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var importe = responseJSON || {};",
													"",
													"tests['Importe has \"_id\" property'] = importe.hasOwnProperty('_id');",
													"tests['Importe has \"subvencion\" property'] = importe.hasOwnProperty('subvencion');",
													"tests['Importe has \"rendimiento\" property'] = importe.hasOwnProperty('rendimiento');",
													"tests['Importe has \"detalle_importe\" property'] = importe.hasOwnProperty('detalle_importe');",
													"if(tests['Importe has \"_id\" property']){",
													"    postman.setEnvironmentVariable('importe_id', importe._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"subvencion\": 100,\n\t\t\"rendimiento\": 10,\n\t\t\"detalle_importe\": null\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Importe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b425fce1-d21f-4d0f-a2eb-bc4461054eeb",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"   var responseJSON = JSON.parse(responseBody);",
													"",
													"    var importe = responseJSON",
													"    ",
													"    tests['Importe has \"_id\" property'] = importe.hasOwnProperty('_id');",
													"    tests['Importe has \"subvencion\" property'] = importe.hasOwnProperty('subvencion');",
													"    tests['Importe has \"rendimiento\" property'] = importe.hasOwnProperty('rendimiento');",
													"    tests['Importe has \"detalle_importe\" property'] = importe.hasOwnProperty('detalle_importe');",
													"        ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\"subvencion\": 100,\n\t\t\"rendimiento\": 49,\n\t\t\"detalle_importe\": null\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe",
												"{{importe_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Importe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6df60b61-8f6d-4804-82d7-ba350b13341d",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON){",
													"      ",
													"        var importe = responseJSON || {};",
													"        ",
													"        tests['Importe has \"_id\" property'] = importe.hasOwnProperty('_id');",
													"        tests['Importe has \"subvencion\" property'] = importe.hasOwnProperty('subvencion');",
													"        tests['Importe has \"rendimiento\" property'] = importe.hasOwnProperty('rendimiento');",
													"        tests['Importe has \"detalle_importe\" property'] = importe.hasOwnProperty('detalle_importe');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains importe'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "DetalleImporte",
							"description": null,
							"item": [
								{
									"name": "Create DetalleImporte",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93437518-efe6-4511-9117-281d9194adca",
												"type": "text/javascript",
												"exec": [
													"var responseJSON = JSON.parse(responseBody);",
													"",
													"var detalle_importe = responseJSON || {};",
													"",
													"tests['DetallImporte has \"_id\" property'] = detalle_importe.hasOwnProperty('_id');",
													"tests['DetallImporte has \"ongd\" property'] = detalle_importe.hasOwnProperty('ongd');",
													"tests['DetallImporte has \"local\" property'] = detalle_importe.hasOwnProperty('local');",
													"tests['DetallImporte has \"exterior\" property'] = detalle_importe.hasOwnProperty('exterior');",
													"if(tests['DetallImporte has \"_id\" property']){",
													"    postman.setEnvironmentVariable('detalle_importe_id', detalle_importe._id);",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\t\t\"ongd\": 100,\n\t\t\"local\": false,\n\t\t\"exterior\": true\n\t\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}/detalle_importe",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe",
												"{{importe_id}}",
												"detalle_importe"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update DetalleImporte",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03ac4f28-bc76-4926-8e5a-95e3f2b29c74",
												"type": "text/javascript",
												"exec": [
													"if (!(environment.isIntegrationTest)) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"",
													"    var detalle_importe = responseJSON || {};",
													"    ",
													"    tests['DetallImporte has \"_id\" property'] = detalle_importe.hasOwnProperty('_id');",
													"    tests['DetallImporte has \"ongd\" property'] = detalle_importe.hasOwnProperty('ongd');",
													"    tests['DetallImporte has \"local\" property'] = detalle_importe.hasOwnProperty('local');",
													"    tests['DetallImporte has \"exterior\" property'] = detalle_importe.hasOwnProperty('exterior');",
													"        ",
													"",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"detalle_importe\": {\n\t\t\"ongd\": 233,\n\t\t\"local\": true,\n\t\t\"exterior\": false\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}/detalle_importe/{{detalle_importe_id}}",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe",
												"{{importe_id}}",
												"detalle_importe",
												"{{detalle_importe_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get DetalleImporte",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc40464e-c91a-43a8-9eef-49679aeed312",
												"type": "text/javascript",
												"exec": [
													"var is200Response = responseCode.code === 200;",
													"",
													"tests['Response code is 200 OK'] = is200Response;",
													"",
													"if(is200Response){",
													"    var responseJSON = JSON.parse(responseBody);",
													"    ",
													"    if(responseJSON){",
													"",
													"        var detalle_importe = responseJSON || {};",
													"        ",
													"        tests['DetallImporte has \"_id\" property'] = detalle_importe.hasOwnProperty('_id');",
													"        tests['DetallImporte has \"ongd\" property'] = detalle_importe.hasOwnProperty('ongd');",
													"        tests['DetallImporte has \"local\" property'] = detalle_importe.hasOwnProperty('local');",
													"        tests['DetallImporte has \"exterior\" property'] = detalle_importe.hasOwnProperty('exterior');",
													"       ",
													"    }",
													"    else",
													"    {",
													"        tests['Response contains detalle_importe'] = false;",
													"    }",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "Authorization",
												"value": "Token {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
										},
										"url": {
											"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}/detalle_importe",
											"host": [
												"{{apiUrl}}"
											],
											"path": [
												"proyecto",
												"{{proyecto_id}}",
												"importe",
												"{{importe_id}}",
												"detalle_importe"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Informe",
					"description": null,
					"item": [
						{
							"name": "Create Informe",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c44eed04-6f20-4856-9566-952cf2e9d9ee",
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"var informe = responseJSON || {};",
											"",
											"tests['Informe has \"_id\" property'] = informe.hasOwnProperty('_id');",
											"tests['Informe has \"nombre\" property'] = informe.hasOwnProperty('nombre');",
											"tests['Informe has \"autor\" property'] = informe.hasOwnProperty('autor');",
											"tests['Informe has \"fecha_inicio\" property'] = informe.hasOwnProperty('fecha_inicio');",
											"tests['Informe has \"fecha_fin\" property'] = informe.hasOwnProperty('fecha_fin');",
											"if(tests['Informe has \"_id\" property']){",
											"    postman.setEnvironmentVariable('informe_id', informe._id);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"nombre\": \"inf 1\",\n\t\t\"autor\": \"cod-10\",\n\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\"fecha_fin\": \"01/01/2018\",\n\t\t\"proyecto\": \"{{proyecto_id}}\"\n\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/informe",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"informe"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Informe",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71b1b953-59b3-4b68-87c4-4f6b0b630731",
										"type": "text/javascript",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"   var responseJSON = JSON.parse(responseBody);",
											"",
											"    var informe = responseJSON || {};",
											"    ",
											"tests['Informe has \"_id\" property'] = informe.hasOwnProperty('_id');",
											"tests['Informe has \"nombre\" property'] = informe.hasOwnProperty('nombre');",
											"tests['Informe has \"autor\" property'] = informe.hasOwnProperty('autor');",
											"tests['Informe has \"fecha_inicio\" property'] = informe.hasOwnProperty('fecha_inicio');",
											"tests['Informe has \"fecha_fin\" property'] = informe.hasOwnProperty('fecha_fin');",
											"    ",
											"",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"nombre\": \"inf 11\",\n\t\t\"autor\": \"cod-111\",\n\t\t\"fecha_inicio\": \"01/01/2018\",\n\t\t\"fecha_fin\": \"01/01/2018\",\n\t\t\"proyecto\": \"{{proyecto_id}}\"\n\t\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/informe/{{informe_id}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"informe",
										"{{informe_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Informe",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "788f55f0-917c-490a-bf65-451ec82a0274",
										"type": "text/javascript",
										"exec": [
											"var is200Response = responseCode.code === 200;",
											"",
											"tests['Response code is 200 OK'] = is200Response;",
											"",
											"if(is200Response){",
											"    var responseJSON = JSON.parse(responseBody);",
											"",
											"    if(responseJSON){",
											"        var informe = responseJSON[0] || {};",
											"    ",
											"tests['Informe has \"_id\" property'] = informe.hasOwnProperty('_id');",
											"tests['Informe has \"nombre\" property'] = informe.hasOwnProperty('nombre');",
											"tests['Informe has \"autor\" property'] = informe.hasOwnProperty('autor');",
											"tests['Informe has \"fecha_inicio\" property'] = informe.hasOwnProperty('fecha_inicio');",
											"tests['Informe has \"fecha_fin\" property'] = informe.hasOwnProperty('fecha_fin');",
											"       ",
											"    }",
											"    else",
											"    {",
											"        tests['Response contains informe'] = false;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "Authorization",
										"value": "Token {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"partida\": {\n\t\t\"tipo_partida\": \"{{tipo_partida_id}}\",\n\t\t\"importe\": 1330,\n\t\t\"aecid\": true\n\t}\n}"
								},
								"url": {
									"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/informe",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"proyecto",
										"{{proyecto_id}}",
										"informe"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Empresa",
			"description": null,
			"item": [
				{
					"name": "Create Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4163b398-4575-4981-b597-c9616509e182",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var empresa = responseJSON || {};",
									"",
									"tests['Empresa has \"_id\" property'] = empresa.hasOwnProperty('_id');",
									"tests['Empresa has \"nombre\" property'] = empresa.hasOwnProperty('nombre');",
									"tests['Empresa has \"cif\" property'] = empresa.hasOwnProperty('cif');",
									"tests['Empresa has \"direccion_fiscal\" property'] = empresa.hasOwnProperty('direccion_fiscal');",
									"tests['Empresa has \"tfno\" property'] = empresa.hasOwnProperty('tfno');",
									"if(tests['Empresa has \"_id\" property']){",
									"    postman.setEnvironmentVariable('empresa_id', empresa._id);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\n\t\t\"nombre\":\"Empresa 1\", \n\t\t\"cif\": \"A12345678\",\n\t\t\"direccion_fiscal\":\"Dirección 1\",\n\t\t\"tfno\":\"911234567\"\n\t\t\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/empresa",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ea8355f-b84a-4308-8101-c3dfbac7a809",
								"type": "text/javascript",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"    var responseJSON = JSON.parse(responseBody);",
									"  ",
									"    var empresa = responseJSON || {};",
									"    ",
									"    tests['Empresa has \"_id\" property'] = empresa.hasOwnProperty('_id');",
									"    tests['Empresa has \"nombre\" property'] = empresa.hasOwnProperty('nombre');",
									"    tests['Empresa has \"cif\" property'] = empresa.hasOwnProperty('cif');",
									"    tests['Empresa has \"direccion_fiscal\" property'] = empresa.hasOwnProperty('direccion_fiscal');",
									"    tests['Empresa has \"tfno\" property'] = empresa.hasOwnProperty('tfno');",
									"    ",
									"",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\n\t\t\"nombre\":\"Empresa 1\", \n\t\t\"cif\": \"A12345678\",\n\t\t\"direccion_fiscal\":\"Dirección 2\",\n\t\t\"tfno\":\"917654321\"\n\t\t\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/empresa/{{empresa_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa",
								"{{empresa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Empresas",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adbc8a40-1cec-4e42-b1b4-6612818b07b0",
								"type": "text/javascript",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    if(responseJSON.length > 0){",
									"        var empresa = responseJSON[0];",
									"",
									"         tests['Empresa has \"_id\" property'] = empresa.hasOwnProperty('_id');",
									"         tests['Empresa has \"nombre\" property'] = empresa.hasOwnProperty('nombre');",
									"         tests['Empresa has \"cif\" property'] = empresa.hasOwnProperty('cif');",
									"         tests['Empresa has \"direccion_fiscal\" property'] = empresa.hasOwnProperty('direccion_fiscal');",
									"         tests['Empresa has \"tfno\" property'] = empresa.hasOwnProperty('tfno');",
									"    }",
									"    else",
									"    {",
									"        tests['Response contains empresaes'] = false;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/empresa",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48732ead-affb-418e-b773-a2a9f87dc30a",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"var empresa = responseJSON || {};",
									"",
									"tests['Empresa has \"_id\" property'] = empresa.hasOwnProperty('_id');",
									"tests['Empresa has \"nombre\" property'] = empresa.hasOwnProperty('nombre');",
									"tests['Empresa has \"cif\" property'] = empresa.hasOwnProperty('cif');",
									"tests['Empresa has \"direccion_fiscal\" property'] = empresa.hasOwnProperty('direccion_fiscal');",
									"tests['Empresa has \"tfno\" property'] = empresa.hasOwnProperty('tfno');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/empresa/{{empresa_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa",
								"{{empresa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Empresa No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97746dc3-9f0d-4ee6-89df-1424a5b493e4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\n\t\t\"nombre\":\"Empresa 1\", \n\t\t\"cif\": \"A12345678\",\n\t\t\"direccion_fiscal\":\"Dirección 1\",\n\t\t\"tfno\":\"911234567\"\n\t\t\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/empresa",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Empresa No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a43ee44a-ae13-4451-aa9f-d3d84f194123",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\n\t\t\"nombre\":\"Empresa 1\", \n\t\t\"cif\": \"A12345678\",\n\t\t\"direccion_fiscal\":\"Dirección 2\",\n\t\t\"tfno\":\"917654321\"\n\t\t\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/empresa/{{empresa_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa",
								"{{empresa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Empresas No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2ffbdbe-b84b-4ce2-9026-1d71d4c9d4a2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/empresa",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Empresa No Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aec8c1b1-e421-4650-96e6-0ff4643df965",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token_no_admin}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/empresa/{{empresa_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa",
								"{{empresa_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CleanUp",
			"description": null,
			"item": [
				{
					"name": "Delete DetalleImporte",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14f85269-aa88-4c8a-84c6-6e09197ffa1a",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}/detalle_importe/{{detalle_importe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"importe",
								"{{importe_id}}",
								"detalle_importe",
								"{{detalle_importe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Importe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f663e66-08c5-4065-b01f-fff13781bc23",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/importe/{{importe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"importe",
								"{{importe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b49a9b86-52c9-42d3-b2ec-30e6ca7a58a5",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/partida/{{partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"partida",
								"{{partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Recurso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7a6463f-085e-4ace-b39e-72160ad7f5c0",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/recurso/{{recurso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"actividad_global",
								"{{actividad_global_id}}",
								"recurso",
								"{{recurso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Progreso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc4d3087-7459-41e8-9dcc-f229fa027474",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}/progreso/{{ag_progreso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"actividad_global",
								"{{actividad_global_id}}",
								"progreso",
								"{{ag_progreso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ActividadGlobal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41264c91-8177-4ae4-83f4-0e2110330399",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/actividad_global/{{actividad_global_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"actividad_global",
								"{{actividad_global_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Progreso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c24d379d-d70e-4f34-93c6-0a86525ad9f8",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}/progreso/{{progreso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"indicador",
								"{{indicador_id}}",
								"progreso",
								"{{progreso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete FuenteVerificacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40c21349-9638-4bb2-b0d2-2e645bcfa104",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/fuentes_verificacion/{{fuente_verificacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"fuentes_verificacion",
								"{{fuente_verificacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Indicador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a438d4-3fae-4432-bbb5-366c69de29dc",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/indicador/{{indicador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"indicador",
								"{{indicador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete FuenteVerificacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2cdc7f4-ef2a-453a-aaaa-7c0474eca757",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/fuentes_verificacion/{{r_fuente_verificacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"fuentes_verificacion",
								"{{r_fuente_verificacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Progreso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bbdea2e-beec-4928-b09b-ac302759d647",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}/progreso/{{ri_progreso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"indicador",
								"{{r_indicador_id}}",
								"progreso",
								"{{ri_progreso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Indicador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d4d6096-d435-44a4-a13c-622d151d9e8a",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/indicador/{{r_indicador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"indicador",
								"{{r_indicador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Hipotesis",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1c3554d-b245-46db-8af3-4a4921d00aa8",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/hipotesis/{{r_hipotesis_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"hipotesis",
								"{{r_hipotesis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ejecucion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0147cabe-8b22-4c59-8c30-c553fb647e9d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/ejecucion_actividad/{{ejecucion_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"actividad",
								"{{actividad_id}}",
								"ejecucion_actividad",
								"{{ejecucion_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Planificacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1db084e7-650d-4a1e-ba4d-808d1322c286",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/planificacion_actividad/{{planificacion_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"actividad",
								"{{actividad_id}}",
								"planificacion_actividad",
								"{{planificacion_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Recurso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f7404f3-d72e-4413-b09a-8aeae5138011",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/recursos/{{ra_recurso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"actividad",
								"{{actividad_id}}",
								"recursos",
								"{{ra_recurso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Progreso",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61898f07-ed3c-4e14-b927-6c5e7f317035",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividad/{{actividad_id}}/progreso/{{ra_progreso_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"actividad",
								"{{actividad_id}}",
								"progreso",
								"{{ra_progreso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Actividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dc8d943-8bdd-43d6-922e-6419ddbe84da",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}/actividades/{{actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}",
								"actividades",
								"{{actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Resultado",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93902c17-bf47-414f-b0b7-1230aec070b9",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/resultado/{{resultado_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"resultado",
								"{{resultado_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Hipotesis",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e49941f4-d9bd-4ac6-850c-2cc210351934",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}/hipotesis/{{hipotesis_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}",
								"hipotesis",
								"{{hipotesis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ObjetivoEspecifico",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5a43b80-d6df-46d7-95e6-95ce5a3c6ab3",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo_especifico/{{objetivo_especifico_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo_especifico",
								"{{objetivo_especifico_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete OperacionBancaria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5e24da9-6803-45ac-b72f-73dbd1c616d1",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}/operacion_bancaria/{{operacion_bancaria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"cuenta_bancaria",
								"{{cuenta_bancaria_id}}",
								"operacion_bancaria",
								"{{operacion_bancaria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CuentaBancaria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baab11c0-beab-483f-bbe2-72c9349baa9d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/cuenta_bancaria/{{cuenta_bancaria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"cuenta_bancaria",
								"{{cuenta_bancaria_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bien",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e5c4379-be56-4ebb-9f6a-a5ee629d9ef2",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/bien/{{bien_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"bien",
								"{{bien_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Documento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d53feca3-e5f9-4013-98fc-4a522a293083",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/documentos/{{documento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"gasto",
								"{{gasto_id}}",
								"documentos",
								"{{documento_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Partida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "494e5b7e-44d2-4d11-bcd3-5be62c8968d1",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}/partida/{{partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"gasto",
								"{{gasto_id}}",
								"partida",
								"{{partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Gasto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63a48f74-d0b1-46ec-96ee-6c364e7457fd",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/gasto/{{gasto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"gasto",
								"{{gasto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Persona",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bba93c35-0df2-4517-8f4f-756666d3a10c",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/persona/{{persona_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"persona",
								"{{persona_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Modificacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4003e7c0-c8f4-41fb-997d-d7787439e64f",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/modificacion/{{modificacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"modificacion",
								"{{modificacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Aportacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a430db4d-c41e-40ec-8983-ccff3c326ce8",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/aportacion/{{aportacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"aportacion",
								"{{aportacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Indicador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1a3508f-e44b-4a33-b457-55514f5341ae",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}/indicador/{{og_indicador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo",
								"{{objetivo_id}}",
								"indicador",
								"{{og_indicador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ObjetivoGeneral",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a71f1416-eb2e-494f-9a1d-6206ceff00d4",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/objetivo/{{objetivo_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"objetivo",
								"{{objetivo_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete TipoValoracion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4715188c-78bf-42ea-b920-ea7073acad63",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Borrado\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_valoracion/{{tipo_valoracion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_valoracion",
								"{{tipo_valoracion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete TipoPersonal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4792be6f-1979-441c-a6c1-421a643d57e9",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_personal/{{tipo_personal_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_personal",
								"{{tipo_personal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete TipoPartida",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9e3482b-4270-42e5-b6b3-fe0821ada7f2",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_partida/{{tipo_partida_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_partida",
								"{{tipo_partida_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete TipoMovimiento",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5b12bcd-82dc-4b2e-99c8-94e2ef09b021",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_movimiento/{{tipo_movimiento_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_movimiento",
								"{{tipo_movimiento_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Entidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7f099cd-e14b-4f20-8a69-159a44567b9b",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}/entidad/{{entidad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}",
								"entidad",
								"{{entidad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Proyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08b64713-690f-42d3-9d29-a76abe94b889",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"var message = responseJSON.message || {};",
									"",
									"tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/proyecto/{{proyecto_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"proyecto",
								"{{proyecto_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete TipoActividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd332ae4-676b-451f-99a8-8ee30df228fb",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/tipo_actividad/{{tipo_actividad_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tipo_actividad",
								"{{tipo_actividad_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "957f7e39-44d4-4d27-8014-e9641cfdb41b",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/pais/{{pais_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"pais",
								"{{pais_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Moneda",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b67109c6-b21b-4e33-a8de-2a9d91351e89",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/moneda/{{moneda_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"moneda",
								"{{moneda_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Localizacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02cf9628-34ef-4d21-adbb-910c0c7cfaae",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/localizacion/{{localizacion_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"localizacion",
								"{{localizacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete EstadosInforme",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd89f20e-ec04-4720-ab33-0d7667585478",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/estados_informe/{{estados_informe_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"estados_informe",
								"{{estados_informe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Empresa",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b32539c-b63f-4d3d-b178-8f9918f1488d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"    ",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"    ",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/empresa/{{empresa_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"empresa",
								"{{empresa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contrato",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a7efcfe-daaa-4065-aa07-9a426142489d",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/contrato/{{contrato_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"contrato",
								"{{contrato_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cofinanciador",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7364c4c5-7f4e-4fbd-9084-0de11bfa015f",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/cofinanciador/{{cofinanciador_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"cofinanciador",
								"{{cofinanciador_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa05e1a2-b5ef-4044-9ef1-bc86de8232b3",
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									"if (responseJSON.hasOwnProperty('message')) {",
									"    var message = responseJSON.message || {};",
									"",
									"    tests['Response contains \"Deleted Correctly\"'] = message.has(\"Correctly\") || message.has(\"Deleted\");",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/categoria/{{categoria_id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"categoria",
								"{{categoria_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}